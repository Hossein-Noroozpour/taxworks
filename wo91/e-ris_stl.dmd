<data-models data-source="e-ris.stl.ds" package-name="com.bull.eris.stl" name="e-ris_stl" jar-name="dmd_e-ris_stl" file-name="e-ris_stl.dmd" checkout="super" vMode="true" module-name="STL">
  <data-model name="AT_TC03_LETTER" tag-name="AT_TC03_LETTER" table="AT_TC03_LETTER" readonly="false" isSystemEntity="true">
    <property name="action" tag-name="action" title="FFM-WGT-ACTION" order-by="action" column="ACTION" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" iskey="true" />
    <property name="CA09_TAX_TYPE_CODE_IND" tag-name="CA09_TAX_TYPE_CODE_IND" title="FFM-WGT-INDICATOR" order-by="CA09_TAX_TYPE_CODE_IND" column="CA09_TAX_TYPE_CODE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC01_ID_IND" tag-name="CC01_ID_IND" title="FFM-WGT-INDICATOR" order-by="CC01_ID_IND" column="CC01_ID_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_CASE_REFERENCE_IND" tag-name="CC03_CASE_REFERENCE_IND" title="FFM-WGT-INDICATOR" order-by="CC03_CASE_REFERENCE_IND" column="CC03_CASE_REFERENCE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_CREATE_ON_IND" tag-name="CC03_CREATE_ON_IND" title="FFM-WGT-INDICATOR" order-by="CC03_CREATE_ON_IND" column="CC03_CREATE_ON_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_DATE_NOT_DELIVERED_IND" tag-name="CC03_DATE_NOT_DELIVERED_IND" title="FFM-WGT-INDICATOR" order-by="CC03_DATE_NOT_DELIVERED_IND" column="CC03_DATE_NOT_DELIVERED_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_DATE_PRINTED_IND" tag-name="CC03_DATE_PRINTED_IND" title="FFM-WGT-INDICATOR" order-by="CC03_DATE_PRINTED_IND" column="CC03_DATE_PRINTED_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_DELIVERED_ON_IND" tag-name="CC03_DELIVERED_ON_IND" title="FFM-WGT-INDICATOR" order-by="CC03_DELIVERED_ON_IND" column="CC03_DELIVERED_ON_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_DELIVER_HOMEADDR_IND" tag-name="CC03_DELIVER_HOMEADDR_IND" title="FFM-WGT-INDICATOR" order-by="CC03_DELIVER_HOMEADDR_IND" column="CC03_DELIVER_HOMEADDR_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_ENTITY_ID_IND" tag-name="CC03_ENTITY_ID_IND" title="FFM-WGT-INDICATOR" order-by="CC03_ENTITY_ID_IND" column="CC03_ENTITY_ID_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_ENTITY_UDK_IND" tag-name="CC03_ENTITY_UDK_IND" title="FFM-WGT-INDICATOR" order-by="CC03_ENTITY_UDK_IND" column="CC03_ENTITY_UDK_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_ENVENT_TRIG_IND" tag-name="CC03_ENVENT_TRIG_IND" title="FFM-WGT-INDICATOR" order-by="CC03_ENVENT_TRIG_IND" column="CC03_ENVENT_TRIG_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_EVENT_DUE_IND" tag-name="CC03_EVENT_DUE_IND" title="FFM-WGT-INDICATOR" order-by="CC03_EVENT_DUE_IND" column="CC03_EVENT_DUE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_FILING_PERIOD_IND" tag-name="CC03_FILING_PERIOD_IND" title="FFM-WGT-INDICATOR" order-by="CC03_FILING_PERIOD_IND" column="CC03_FILING_PERIOD_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_INTERNAL_ID_3_PARTY_IND" tag-name="CC03_INTERNAL_ID_3_PARTY_IND" title="FFM-WGT-INDICATOR" order-by="CC03_INTERNAL_ID_3_PARTY_IND" column="CR01_INTERNAL_ID_3_PARTY_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_LETTER_TO_3_PARTY_IND" tag-name="CC03_LETTER_TO_3_PARTY_IND" title="FFM-WGT-INDICATOR" order-by="CC03_LETTER_TO_3_PARTY_IND" column="CC03_LETTER_TO_3_PARTY_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_NEXT_ENVENT_IND" tag-name="CC03_NEXT_ENVENT_IND" title="FFM-WGT-INDICATOR" order-by="CC03_NEXT_ENVENT_IND" column="CC03_NEXT_ENVENT_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_PAYMENT_PERIOD_IND" tag-name="CC03_PAYMENT_PERIOD_IND" title="FFM-WGT-INDICATOR" order-by="CC03_PAYMENT_PERIOD_IND" column="CC03_PAYMENT_PERIOD_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_PRINT_COUNT_IND" tag-name="CC03_PRINT_COUNT_IND" title="FFM-WGT-INDICATOR" order-by="CC03_PRINT_COUNT_IND" column="CC03_PRINT_COUNT_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_PRINT_OFFICER_IND" tag-name="CC03_PRINT_OFFICER_IND" title="FFM-WGT-INDICATOR" order-by="CC03_PRINT_OFFICER_IND" column="CC03_PRINT_OFFICER_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_PRINT_OFFICE_IND" tag-name="CC03_PRINT_OFFICE_IND" title="FFM-WGT-INDICATOR" order-by="CC03_PRINT_OFFICE_IND" column="CC03_PRINT_OFFICE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_PUBLISH_IN_GAZETTE_IND" tag-name="CC03_PUBLISH_IN_GAZETTE_IND" title="FFM-WGT-INDICATOR" order-by="CC03_PUBLISH_IN_GAZETTE_IND" column="CC03_PUBLISH_IN_GAZETTE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_RECEIVED_ON_IND" tag-name="CC03_RECEIVED_ON_IND" title="FFM-WGT-INDICATOR" order-by="CC03_RECEIVED_ON_IND" column="CC03_RECEIVED_ON_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_REPLY_DUE_IND" tag-name="CC03_REPLY_DUE_IND" title="FFM-WGT-INDICATOR" order-by="CC03_REPLY_DUE_IND" column="CC03_REPLY_DUE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_REPLY_INCOMING_NUM_IND" tag-name="CC03_REPLY_INCOMING_NUM_IND" title="FFM-WGT-INDICATOR" order-by="CC03_REPLY_INCOMING_NUM_IND" column="CC03_REPLY_INCOMING_NUM_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_REPLY_OFFICE_IND" tag-name="CC03_REPLY_OFFICE_IND" title="FFM-WGT-INDICATOR" order-by="CC03_REPLY_OFFICE_IND" column="CC03_REPLY_OFFICE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_REPLY_TAXPAYER_REF_IND" tag-name="CC03_REPLY_TAXPAYER_REF_IND" title="FFM-WGT-INDICATOR" order-by="CC03_REPLY_TAXPAYER_REF_IND" column="CC03_REPLY_TAXPAYER_REF_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_SEIZURE_DUE_FLAG_IND" tag-name="CC03_SEIZURE_DUE_FLAG_IND" title="FFM-WGT-INDICATOR" order-by="CC03_SEIZURE_DUE_FLAG_IND" column="CC03_SEIZURE_DUE_FLAG_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_SENT_ON_IND" tag-name="CC03_SENT_ON_IND" title="FFM-WGT-INDICATOR" order-by="CC03_SENT_ON_IND" column="CC03_SENT_ON_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_TRACKING_NUMBER_IND" tag-name="CC03_TRACKING_NUMBER_IND" title="FFM-WGT-INDICATOR" order-by="CC03_TRACKING_NUMBER_IND" column="CC03_TRACKING_NUMBER_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CC03_YEAR_IND" tag-name="CC03_YEAR_IND" title="FFM-WGT-INDICATOR" order-by="CC03_YEAR_IND" column="CC03_YEAR_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CR01_INTERNAL_ID_IND" tag-name="CR01_INTERNAL_ID_IND" title="FFM-WGT-INDICATOR" order-by="CR01_INTERNAL_ID_IND" column="CR01_INTERNAL_ID_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CR03_BRANCH_CODE_IND" tag-name="CR03_BRANCH_CODE_IND" title="FFM-WGT-INDICATOR" order-by="CR03_BRANCH_CODE_IND" column="CR03_BRANCH_CODE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CR07_FIN_IND" tag-name="CR07_FIN_IND" title="FFM-WGT-INDICATOR" order-by="CR07_FIN_IND" column="CR07_FIN_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CS10_ID_IND" tag-name="CS10_ID_IND" title="FFM-WGT-INDICATOR" order-by="CS10_ID_IND" column="CS10_ID_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CSTD_CORRESPONDENCE_IND" tag-name="CSTD_CORRESPONDENCE_IND" title="FFM-WGT-INDICATOR" order-by="CSTD_CORRESPONDENCE_IND" column="CSTD_CORRESPONDENCE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CSTD_ENTITY_IND" tag-name="CSTD_ENTITY_IND" title="FFM-WGT-INDICATOR" order-by="CSTD_ENTITY_IND" column="CSTD_ENTITY_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CSTD_LETTER_TYPE_IND" tag-name="CSTD_LETTER_TYPE_IND" title="FFM-WGT-INDICATOR" order-by="CSTD_LETTER_TYPE_IND" column="CSTD_LETTER_TYPE_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CSTD_NATURE_3_PARTY_IND" tag-name="CSTD_NATURE_3_PARTY_IND" title="FFM-WGT-INDICATOR" order-by="CSTD_NATURE_3_PARTY_IND" column="CSTD_NATURE_3_PARTY_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="CSTD_STATUS_IND" tag-name="CSTD_STATUS_IND" title="FFM-WGT-INDICATOR" order-by="CSTD_STATUS_IND" column="CSTD_STATUS_IND" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="1" />
    <property name="ca09_tax_type_code" type="String" column-type="VARCHAR" readonly="false" column="CA09_TAX_TYPE_CODE" title="CA09_TAX_TYPE_CODE" default-value="" tag-name="ca09_tax_type_code" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_id" type="Long" column-type="NUMERIC" column="CC03_ID" title="CC03_ID" default-value="" tag-name="cc03_id" iskey="true" isSequence="true" find-by="true" order-by="cc03_id" web-service="true" isAudit="true" />
    <property name="cc01_id" type="Long" column-type="NUMERIC" readonly="false" column="CC01_ID" title="CC01_ID" default-value="" tag-name="cc01_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_case_reference" type="String" column-type="VARCHAR" readonly="false" column="CC03_CASE_REFERENCE" title="CC03_CASE_REFERENCE" default-value="" tag-name="cc03_case_reference" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_create_on" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_CREATE_ON" title="CC03_CREATE_ON" default-value="" tag-name="cc03_create_on" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_date_not_delivered" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_DATE_NOT_DELIVERED" title="CC03_DATE_NOT_DELIVERED" default-value="" tag-name="cc03_date_not_delivered" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_date_printed" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_DATE_PRINTED" title="CC03_DATE_PRINTED" default-value="" tag-name="cc03_date_printed" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_deliver_homeaddr" type="String" column-type="CHAR" readonly="false" column="CC03_DELIVER_HOMEADDR" title="CC03_DELIVER_HOMEADDR" default-value="" tag-name="cc03_deliver_homeaddr" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_delivered_on" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_DELIVERED_ON" title="CC03_DELIVERED_ON" default-value="" tag-name="cc03_delivered_on" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_entity_id" type="String" column-type="NVARCHAR" readonly="false" column="CC03_ENTITY_ID" title="CC03_ENTITY_ID" default-value="" tag-name="cc03_entity_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_entity_udk" type="String" column-type="NVARCHAR" readonly="false" column="CC03_ENTITY_UDK" title="CC03_ENTITY_UDK" default-value="" tag-name="cc03_entity_udk" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_envent_trig" type="String" column-type="CHAR" readonly="false" column="CC03_ENVENT_TRIG" title="CC03_ENVENT_TRIG" default-value="" tag-name="cc03_envent_trig" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_event_due" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_EVENT_DUE" title="CC03_EVENT_DUE" default-value="" tag-name="cc03_event_due" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_filing_period" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_FILING_PERIOD" title="CC03_FILING_PERIOD" default-value="" tag-name="cc03_filing_period" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_internal_id_3_party" type="Long" column-type="NUMERIC" readonly="false" column="CR01_INTERNAL_ID_3_PARTY" title="CR01_INTERNAL_ID_3_PARTY" default-value="" tag-name="cc03_internal_id_3_party" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_letter_to_3_party" type="String" column-type="CHAR" readonly="false" column="CC03_LETTER_TO_3_PARTY" title="CC03_LETTER_TO_3_PARTY" default-value="" tag-name="cc03_letter_to_3_party" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_next_envent" type="String" column-type="VARCHAR" readonly="false" column="CC03_NEXT_ENVENT" title="CC03_NEXT_ENVENT" default-value="" tag-name="cc03_next_envent" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_payment_period" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_PAYMENT_PERIOD" title="CC03_PAYMENT_PERIOD" default-value="" tag-name="cc03_payment_period" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_print_count" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_PRINT_COUNT" title="CC03_PRINT_COUNT" default-value="" tag-name="cc03_print_count" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_print_office" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_PRINT_OFFICE" title="CC03_PRINT_OFFICE" default-value="" tag-name="cc03_print_office" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_print_officer" type="String" column-type="VARCHAR" readonly="false" column="CC03_PRINT_OFFICER" title="CC03_PRINT_OFFICER" default-value="" tag-name="cc03_print_officer" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_publish_in_gazette" type="String" column-type="CHAR" readonly="false" column="CC03_PUBLISH_IN_GAZETTE" title="CC03_PUBLISH_IN_GAZETTE" default-value="" tag-name="cc03_publish_in_gazette" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="eventName" tag-name="eventName" title="FFT-WGT-EVENT" order-by="eventName" column="EVENTNAME" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" length="50" iskey="true" find-by="true" />
    <property name="eventTimeStamp" tag-name="eventTimeStamp" title="FFM-WGT-TIME" order-by="eventTimeStamp" column="EVENTTIMESTAMP" type="Timestamp" DB-column-type="TIMESTAMP" column-type="TIMESTAMP" nullable="false" length="7" iskey="true" />
    <property name="performer" tag-name="performer" title="FFT-WGT-PERFORMER" order-by="performer" column="PERFORMER" type="String" DB-column-type="VARCHAR2" column-type="VARCHAR" nullable="false" length="50" iskey="true" />
    <property name="cc03_received_on" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_RECEIVED_ON" title="CC03_RECEIVED_ON" default-value="" tag-name="cc03_received_on" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_reply_due" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_REPLY_DUE" title="CC03_REPLY_DUE" default-value="" tag-name="cc03_reply_due" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_reply_incoming_num" type="String" column-type="VARCHAR" readonly="false" column="CC03_REPLY_INCOMING_NUM" title="CC03_REPLY_INCOMING_NUM" default-value="" tag-name="cc03_reply_incoming_num" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_reply_office" type="String" column-type="CHAR" readonly="false" column="CC03_REPLY_OFFICE" title="CC03_REPLY_OFFICE" default-value="" tag-name="cc03_reply_office" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_reply_taxpayer_ref" type="String" column-type="VARCHAR" readonly="false" column="CC03_REPLY_TAXPAYER_REF" title="CC03_REPLY_TAXPAYER_REF" default-value="" tag-name="cc03_reply_taxpayer_ref" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_seizure_due_flag" type="String" column-type="CHAR" readonly="false" column="CC03_SEIZURE_DUE_FLAG" title="CC03_SEIZURE_DUE_FLAG" default-value="" tag-name="cc03_seizure_due_flag" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_sent_on" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_SENT_ON" title="CC03_SENT_ON" default-value="" tag-name="cc03_sent_on" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc03_tracking_number" type="String" column-type="VARCHAR" readonly="false" column="CC03_TRACKING_NUMBER" title="CC03_TRACKING_NUMBER" default-value="" tag-name="cc03_tracking_number" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cc03_year" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_YEAR" title="CC03_YEAR" default-value="" tag-name="cc03_year" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cr01_internal_id" type="Long" column-type="NUMERIC" readonly="false" column="CR01_INTERNAL_ID" title="CR01_INTERNAL_ID" default-value="" tag-name="cr01_internal_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cr03_branch_code" type="String" column-type="VARCHAR" readonly="false" column="CR03_BRANCH_CODE" title="CR03_BRANCH_CODE" default-value="" tag-name="cr03_branch_code" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cr07_fin" type="String" column-type="NVARCHAR" readonly="false" column="CR07_FIN" title="CR07_FIN" default-value="" tag-name="cr07_fin" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cs10_id" type="String" column-type="NVARCHAR" readonly="false" column="CS10_ID" title="CS10_ID" default-value="" tag-name="cs10_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cstd_correspondence" type="String" column-type="VARCHAR" readonly="false" column="CSTD_CORRESPONDENCE" title="CSTD_CORRESPONDENCE" default-value="" tag-name="cstd_correspondence" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cstd_entity" type="String" column-type="NVARCHAR" readonly="false" column="CSTD_ENTITY" title="CSTD_ENTITY" default-value="" tag-name="cstd_entity" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cstd_letter_type" type="String" column-type="VARCHAR" readonly="false" column="CSTD_LETTER_TYPE" title="cstd_letter_type" default-value="" tag-name="cstd_letter_type" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cstd_nature_3_party" type="String" column-type="VARCHAR" readonly="false" column="CSTD_NATURE_3_PARTY" title="CSTD_NATURE_3_PARTY" default-value="" tag-name="cstd_nature_3_party" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isSensitive="false" />
    <property name="cstd_status" type="String" column-type="VARCHAR" readonly="false" column="CSTD_STATUS" title="CSTD_STATUS" default-value="" tag-name="cstd_status" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isStatus="true" />
    <raw-find-entry name="getAuditTrailList" cascade="false">select PERFORMER , EVENTTIMESTAMP , ACTION , EVENTNAME , CA09_TAX_TYPE_CODE_IND , CA09_TAX_TYPE_CODE , CC01_ID_IND , CC01_ID , CC03_CASE_REFERENCE_IND , CC03_CASE_REFERENCE , CC03_CREATE_ON_IND , CC03_CREATE_ON , CC03_DATE_NOT_DELIVERED_IND , CC03_DATE_NOT_DELIVERED , CC03_DATE_PRINTED_IND , CC03_DATE_PRINTED , CC03_DELIVER_HOMEADDR_IND , CC03_DELIVER_HOMEADDR , CC03_DELIVERED_ON_IND , CC03_DELIVERED_ON , CC03_ENTITY_ID_IND , CC03_ENTITY_ID , CC03_ENTITY_UDK_IND , CC03_ENTITY_UDK , CC03_ENVENT_TRIG_IND , CC03_ENVENT_TRIG , CC03_EVENT_DUE_IND , CC03_EVENT_DUE , CC03_FILING_PERIOD_IND , CC03_FILING_PERIOD , CR01_INTERNAL_ID_3_PARTY_IND , CR01_INTERNAL_ID_3_PARTY , CC03_LETTER_TO_3_PARTY_IND , CC03_LETTER_TO_3_PARTY , CC03_NEXT_ENVENT_IND , CC03_NEXT_ENVENT , CC03_PAYMENT_PERIOD_IND , CC03_PAYMENT_PERIOD , CC03_PRINT_COUNT_IND , CC03_PRINT_COUNT , CC03_PRINT_OFFICE_IND , CC03_PRINT_OFFICE , CC03_PRINT_OFFICER_IND , CC03_PRINT_OFFICER , CC03_PUBLISH_IN_GAZETTE_IND , CC03_PUBLISH_IN_GAZETTE , CC03_RECEIVED_ON_IND , CC03_RECEIVED_ON , CC03_REPLY_DUE_IND , CC03_REPLY_DUE , CC03_REPLY_INCOMING_NUM_IND , CC03_REPLY_INCOMING_NUM , CC03_REPLY_OFFICE_IND , CC03_REPLY_OFFICE , CC03_REPLY_TAXPAYER_REF_IND , CC03_REPLY_TAXPAYER_REF , CC03_SEIZURE_DUE_FLAG_IND , CC03_SEIZURE_DUE_FLAG , CC03_SENT_ON_IND , CC03_SENT_ON , CC03_TRACKING_NUMBER_IND , CC03_TRACKING_NUMBER , CC03_YEAR_IND , CC03_YEAR , CR01_INTERNAL_ID_IND , CR01_INTERNAL_ID , CR03_BRANCH_CODE_IND , CR03_BRANCH_CODE , CR07_FIN_IND , CR07_FIN , CS10_ID_IND , CS10_ID , CSTD_CORRESPONDENCE_IND , CSTD_CORRESPONDENCE , CSTD_ENTITY_IND , CSTD_ENTITY , CSTD_LETTER_TYPE_IND , CSTD_LETTER_TYPE , CSTD_NATURE_3_PARTY_IND , CSTD_NATURE_3_PARTY , CSTD_STATUS_IND , CSTD_STATUS  from AT_TC03_LETTER where performer = #performer:String#  and eventTimeStamp &gt;= #from:java.sql.Timestamp# and eventTimeStamp &lt;= #to:java.sql.Timestamp#</raw-find-entry>
  </data-model>
  <data-model name="CG_TC01_LETTER_TEMPLATE" tag-name="CG_TC01_LETTER_TEMPLATE" table="CG_TC01_LETTER_TEMPLATE" readonly="false" isSystemEntity="true">
    <property name="cc01_id" type="Long" column-type="NUMERIC" column="CC01_ID" title="CC01_ID" default-value="" tag-name="cc01_id" iskey="true" isSequence="true" find-by="true" order-by="cc01_id" web-service="true" />
    <property name="cc01_can_be_objected" type="String" column-type="VARCHAR" readonly="true" column="CC01_CAN_BE_OBJECTED" title="CC01_CAN_BE_OBJECTED" default-value="" tag-name="cc01_can_be_objected" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc01_confirm_receipt" type="String" column-type="CHAR" readonly="false" column="CC01_CONFIRM_RECEIPT" title="CC01_CONFIRM_RECEIPT" default-value="" tag-name="cc01_confirm_receipt" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc01_confirm_sending" type="String" column-type="CHAR" readonly="false" column="CC01_CONFIRM_SENDING" title="CC01_CONFIRM_SENDING" default-value="" tag-name="cc01_confirm_sending" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc01_digital_signature" type="String" column-type="CHAR" readonly="false" column="CC01_DIGITAL_SIGNATURE" title="CC01_DIGITAL_SIGNATURE" default-value="" tag-name="cc01_digital_signature" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc01_latest_version" type="Long" column-type="NUMERIC" column="CC01_LATEST_VERSION" title="cc01_latest_version" default-value="" tag-name="cc01_latest_version" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc01_need_reply" type="String" column-type="CHAR" readonly="false" column="CC01_NEED_REPLY" title="CC01_NEED_REPLY" default-value="" tag-name="cc01_need_reply" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc01_print_by_tps" type="String" column-type="CHAR" readonly="false" column="CC01_PRINT_BY_TPS" title="CC01_PRINT_BY_TPS" default-value="" tag-name="cc01_print_by_tps" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc01_publish_in_gazette" type="String" column-type="CHAR" readonly="false" column="CC01_PUBLISH_IN_GAZETTE" title="CC01_PUBLISH_IN_GAZETTE" default-value="" tag-name="cc01_publish_in_gazette" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc01_report_file_name" type="String" column-type="VARCHAR" readonly="false" column="CC01_REPORT_FILE_NAME" title="CC01_REPORT_FILE_NAME" default-value="" tag-name="cc01_report_file_name" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cstd_letter_type" type="String" column-type="VARCHAR" readonly="false" column="CSTD_LETTER_TYPE" title="CSTD_LETTER_TYPE" default-value="" tag-name="cstd_letter_type" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cstd_reply_days" type="String" column-type="VARCHAR" readonly="false" column="CSTD_REPLY_DAYS" title="CSTD_REPLY_DAYS" default-value="" tag-name="cstd_reply_days" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
  </data-model>
  <data-model readonly="true" name="SL37_GENERAL_FTN_LETTER" tag-name="SL37_GENERAL_FTN_LETTER" table="SL37_GENERAL_FTN_LETTER" order="" web-service="false" accept-null="false" isEntity="false" withExecuteDate="false">
    <property name="RET2_CA02_RETURN_ID" type="String" column-type="VARCHAR" column="" title="" default-value="" tag-name="RET2_CA02_RETURN_ID" iskey="true" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="ADM4_CS04_NAME" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="ADM4_CS04_NAME" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="ADM4_CS04_PHONE" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="ADM4_CS04_PHONE" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="ADM4_CS04_POSTAL_ADR" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="ADM4_CS04_POSTAL_ADR" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="GTO_REG16_CS04_ID" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="GTO_REG16_CS04_ID" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="ISSCC03CREON" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="ISSCC03CREON" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="ISSUANCE_CC03_ID" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="ISSUANCE_CC03_ID" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="PAIDTAXAVIAMT" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="PAIDTAXAVIAMT" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="PAIDTAXFRM24AMTNUM" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="PAIDTAXFRM24AMTNUM" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="PREVIOUS_FTN_CC03_CREATE_ON" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="PREVIOUS_FTN_CC03_CREATE_ON" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="PREVIOUS_FTN_CC03_ID" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="PREVIOUS_FTN_CC03_ID" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG10_CR10_REG_NUM" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG10_CR10_REG_NUM" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG11_CR11_FIRST_NAME" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG11_CR11_FIRST_NAME" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG11_CR11_LAST_NAME" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG11_CR11_LAST_NAME" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG13_CR13_NAME" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG13_CR13_NAME" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG13_CR13_TRADE_NAME" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value=" " tag-name="REG13_CR13_TRADE_NAME" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG1CR01NATPERFLAG" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG1CR01NATPERFLAG" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG1_CR01_TIN_ID" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG1_CR01_TIN_ID" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG20CR20POSTADDR" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG20CR20POSTADDR" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG25_CR25_FIXED_PHONE" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG25_CR25_FIXED_PHONE" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG4_CR04_NATIONAL_ID" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG4_CR04_NATIONAL_ID" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="REG6_CSTD_ACTIVITY_CODE" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="REG6_CSTD_ACTIVITY_CODE" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="RET2CA02TAXYEAR" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="RET2CA02TAXYEAR" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="RET2CSTDRETTYPE" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="RET2CSTDRETTYPE" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="RET2_CA02_RETURN_VERSION" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="RET2_CA02_RETURN_VERSION" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="RET2_CA02_TAX_PERIOD_FROM" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="RET2_CA02_TAX_PERIOD_FROM" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="RET2_CA02_TAX_PERIOD_TO" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="RET2_CA02_TAX_PERIOD_TO" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="RET3_CA03_RETURN_CONTENT" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="RET3_CA03_RETURN_CONTENT" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="SUB_PENALTIES_TOTAL_AMT_NUMBER" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="SUB_PENALTIES_TOTAL_AMT_NUMBER" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isAudit="false" isSensitive="false" />
    <property name="SUB_REWARDS_TOTAL_AMT_NUMBER" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="SUB_REWARDS_TOTAL_AMT_NUMBER" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isAudit="false" isSensitive="false" />
    <property name="SUB_TAC_CE06_DISPLAY_FLAG_UNPAID_AMT" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="SUB_TAC_CE06_DISPLAY_FLAG_UNPAID_AMT" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="SUB_TAC_CE06_SUM_DISPLAY_UNPAID_AMT" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="SUB_TAC_CE06_SUM_DISPLAY_UNPAID_AMT" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <property name="SUB_TAC_CE07_SUM_UNPAID_AMT" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="SUB_TAC_CE07_SUM_UNPAID_AMT" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isAudit="false" isSensitive="false" />
    <property name="SUB_UNPAID_FLAG_AMT_NUMBER" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="SUB_UNPAID_FLAG_AMT_NUMBER" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isAudit="false" isSensitive="false" />
    <property name="SYSDATEPERSIAN" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="SYSDATEPERSIAN" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isSensitive="false" />
    <raw-find-entry name="fetch_one_p1" cascade="false" web-service="false">SELECT
     RET2.CA02_RETURN_ID RET2_CA02_RETURN_ID,
     ADM4.CS04_NAME ADM4_CS04_NAME,
     ADM4.CS04_PHONE ADM4_CS04_PHONE,
     ADM4.CS04_POSTAL_ADR ADM4_CS04_POSTAL_ADR,
     '' GTO_REG16_CS04_ID,
     REG10.CR10_REG_NUMBER REG10_CR10_REG_NUM,
     REG11.CR11_FIRST_NAME REG11_CR11_FIRST_NAME,
     REG11.CR11_LAST_NAME REG11_CR11_LAST_NAME,
     REG13.CR13_NAME REG13_CR13_NAME,
     REG13.CR13_TRADE_NAME REG13_CR13_TRADE_NAME,
     REG1.CR01_NATURAL_PER_FLAG REG1CR01NATPERFLAG,
     REG1.CR01_TIN_ID REG1_CR01_TIN_ID,
     REG20.CR20_POSTAL_ADDRESS REG20CR20POSTADDR,
     REG25.CR25_FIXED_PHONE REG25_CR25_FIXED_PHONE,
     REG4.CR04_NATIONAL_ID REG4_CR04_NATIONAL_ID,
     REG6.CSTD_ACTIVITY_CODE REG6_CSTD_ACTIVITY_CODE,
     RET2.CA02_TAX_YEAR RET2CA02TAXYEAR,
     RET2.CSTD_RETURN_TYPE RET2CSTDRETTYPE,
     RET2.CA02_RETURN_VERSION RET2_CA02_RETURN_VERSION,
     TO_CHAR( RET2.CA02_TAX_PERIOD_FROM, 'yyyy/mm/dd', 'NLS_CALENDAR=Persian' ) RET2_CA02_TAX_PERIOD_FROM,
     TO_CHAR( RET2.CA02_TAX_PERIOD_TO, 'yyyy/mm/dd', 'NLS_CALENDAR=Persian' ) RET2_CA02_TAX_PERIOD_TO,
     RET3.CA03_RETURN_CONTENT RET3_CA03_RETCNT,
     TO_CHAR( SYSDATE, 'yyyy/mm/dd', 'NLS_CALENDAR=Persian' ) SYSDATEPERSIAN
FROM
     (
          SELECT *
          FROM TA02_RETURNS
          WHERE CA02_RETURN_ID = #return_id:String#
               AND CA02_RETURN_VERSION = #return_version:String#
     )RET2
LEFT JOIN TA03_RET_CONTENT RET3 ON
     RET3.CA02_RETURN_ID = RET2.CA02_RETURN_ID
     AND RET3.CA02_RETURN_VERSION = RET2.CA02_RETURN_VERSION
LEFT JOIN TR01_TAXPAYER REG1 ON
     REG1.CR01_INTERNAL_ID = RET2.CR01_INTERNAL_ID
LEFT JOIN TR04_NATURAL_PERSON REG4 ON
     REG1.CR04_NATURAL_PER_ID IS NOT NULL
     AND REG1.CR04_NATURAL_PER_ID = REG4.CR04_NATURAL_PER_ID
LEFT JOIN TR06_BRANCH_BUSI_ACTIVITY REG6 ON
     RET2.CR01_INTERNAL_ID = REG6.CR01_INTERNAL_ID
     AND RET2.CR03_BRANCH_CODE = REG6.CR03_BRANCH_CODE
     AND REG6.CR06_END_DATE IS NULL
LEFT JOIN TR10_LEGAL_PERSON REG10 ON
     REG1.CR10_LEGAL_PER_ID IS NOT NULL
     AND REG1.CR10_LEGAL_PER_ID = REG10.CR10_LEGAL_PER_ID
LEFT JOIN TR11_NATURAL_PER_NAME REG11 ON
     REG1.CR04_NATURAL_PER_ID = REG11.CR04_NATURAL_PER_ID
     AND REG11.CR11_END_DATE IS NULL
LEFT JOIN TR13_LEGAL_PER_NAME REG13 ON
     REG1.CR10_LEGAL_PER_ID = REG13.CR10_LEGAL_PER_ID
     AND REG13.CR13_END_DATE IS NULL
LEFT JOIN TR16_TAXPAYER_OFFICE REG16 ON
     REG1.CR01_INTERNAL_ID = REG16.CR01_INTERNAL_ID
     AND REG16.CR16_END_DATE IS NULL
LEFT JOIN TR17_BRANCH_NAME REG17 ON
     REG17.CR17_END_DATE IS NULL
     AND REG17.CR01_INTERNAL_ID = RET2.CR01_INTERNAL_ID
     AND RET2.CR03_BRANCH_CODE = REG17.CR03_BRANCH_CODE
LEFT JOIN TR19_BRANCH_PHYSICAL_ADDR REG19 ON
     RET2.CR01_INTERNAL_ID = REG19.CR01_INTERNAL_ID
     AND RET2.CR03_BRANCH_CODE = REG19.CR03_BRANCH_CODE
     AND REG19.CR19_END_DATE IS NULL
LEFT JOIN TR20_BRANCH_POSTAL_ADDR REG20 ON
     RET2.CR01_INTERNAL_ID = REG20.CR01_INTERNAL_ID
     AND RET2.CR03_BRANCH_CODE = REG20.CR03_BRANCH_CODE
     AND REG20.CR20_END_DATE IS NULL
LEFT JOIN TR25_OFFICIALS REG25 ON
     RET2.CR01_INTERNAL_ID = REG25.CR01_INTERNAL_ID
     AND RET2.CR03_BRANCH_CODE = REG25.CR03_BRANCH_CODE
LEFT JOIN TS04_OFFICE ADM4 ON
     ADM4.CS04_ID = REG16.CS04_ID</raw-find-entry>
    <raw-find-entry name="fetch_one_p10_sub_rewards_total" cascade="false" web-service="false">SELECT
     SUM( AVAILABLE_AMT ) SUBREWTTLAMTNUM
FROM
     (
          SELECT
               CT01_DESC AS CODE_DESC,
               AMOUNT AS AVAILABLE_AMT
          FROM
               (
                    SELECT
                         CT01_DESC,
                         SUM( AMOUNT ) AMOUNT
                    FROM
                         (
                              SELECT
                                   TT01.CT01_DESC,
                                   CASE
                                        WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                   END AMOUNT
                              FROM
                                   TT01_TRANSACTIONS TT01,
                                   TA02_RETURNS TA02
                              WHERE
                                   TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                   AND TT01.CT01_REVERSED_FLAG = 'N'
                                   AND TT01.CT01_CLEARED_FLAG = 'Y'
                                   AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                   AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                   AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                             INTERNAL_CODE
                                        FROM
                                             STD_CODES
                                        WHERE
                                             GROUP_CODE = 'TRANSACTION_TYPE'
                                             AND PARENT_INTERNAL_CODE IN('OT')
                                   )
                                   AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                   AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                   AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                   AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                   AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                   AND TA02.CA02_RETURN_ID = #return_id:String#
                                   AND TA02.CA02_RETURN_VERSION = #return_version:String#
                         UNION ALL SELECT
                                   TT01.CT01_DESC,
                                   CASE
                                        WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                   END AMOUNT
                              FROM
                                   TT01_TRANSACTIONS TT01
                              WHERE
                                   TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                   AND TT01.CT01_REVERSED_FLAG = 'N'
                                   AND TT01.CT01_CLEARED_FLAG = 'Y'
                                   AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                   AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                   AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                             INTERNAL_CODE
                                        FROM
                                             STD_CODES
                                        WHERE
                                             GROUP_CODE = 'TRANSACTION_TYPE'
                                             AND PARENT_INTERNAL_CODE IN('OT')
                                   )
                                   AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                   AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                         ) TAB1
                    GROUP BY
                         CT01_DESC
               ) TAB
          WHERE
               TAB.AMOUNT &gt; 0
     ) AVAILABLE</raw-find-entry>
    <raw-find-entry name="fetch_one_p11_sub_penalties_total" cascade="false" web-service="false">SELECT
     SUM( AMT ) SUBPENTTLAMTNUM
FROM
     (
          SELECT
               SUM( UNPAID_AMT ) AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         UNPAID_AMT,
                         CODE_DESC
                    FROM
                         (
                              SELECT
                                   CT01_DESC AS CODE_DESC,
                                   AMOUNT AS UNPAID_AMT
                              FROM
                                   (
                                        SELECT
                                             CT01_DESC,
                                             SUM( AMOUNT ) AMOUNT
                                        FROM
                                             (
                                                  SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01,
                                                       TA02_RETURNS TA02
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE IN(
                                                            'LFPEN',
                                                            'LRPEN',
                                                            'LPPEN'
                                                       )
                                                       AND TT01.CSTD_TRAN_TYPE IN(
                                                            SELECT
                                                                 INTERNAL_CODE
                                                            FROM
                                                                 STD_CODES
                                                            WHERE
                                                                 GROUP_CODE = 'TRANSACTION_TYPE'
                                                                 AND PARENT_INTERNAL_CODE IN(
                                                                      'TA',
                                                                      'AJ'
                                                                 )
                                                       )
                                                       AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                                       AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                                       AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                                       AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                                       AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                                       AND TA02.CA02_RETURN_ID = #return_id:String#
                                                       AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                                       AND(
                                                            TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                            OR(
                                                                 TT01.CSTD_ENTITY = 'PEN'
                                                                 AND TT01.CT01_ENTITY_ID IN(
                                                                      SELECT
                                                                           TT28.CT28_ID
                                                                      FROM
                                                                           TT28_PENALTY TT28
                                                                      WHERE
                                                                           TT28.CSTD_ENTITY = 'RET'
                                                                           AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                           AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                                 )
                                                            )
                                                       )
                                             UNION ALL SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  WHERE
                                                       TT01.CR01_INTERNAL_ID = #internal_id:String#
                                                       AND TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE IN(
                                                            'LFPEN',
                                                            'LRPEN',
                                                            'LPPEN'
                                                       )
                                                       AND TT01.CSTD_TRAN_TYPE IN(
                                                            SELECT
                                                                 INTERNAL_CODE
                                                            FROM
                                                                 STD_CODES
                                                            WHERE
                                                                 GROUP_CODE = 'TRANSACTION_TYPE'
                                                                 AND PARENT_INTERNAL_CODE IN(
                                                                      'TA',
                                                                      'AJ'
                                                                 )
                                                       )
                                                       AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                                       AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                                       AND(
                                                            TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                            OR(
                                                                 TT01.CSTD_ENTITY = 'PEN'
                                                                 AND TT01.CT01_ENTITY_ID IN(
                                                                      SELECT
                                                                           TT28.CT28_ID
                                                                      FROM
                                                                           TT28_PENALTY TT28
                                                                      WHERE
                                                                           TT28.CSTD_ENTITY = 'RET'
                                                                           AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                           AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                                 )
                                                            )
                                                       )
                                             ) TAB1
                                        GROUP BY
                                             CT01_DESC
                                   ) TAB
                         ) UNPAID
               UNION ALL SELECT
                         UNPAID_AMT,
                         CODE_DESC
                    FROM
                         (
                              SELECT
                                   CT01_DESC AS CODE_DESC,
                                   AMOUNT AS UNPAID_AMT
                              FROM
                                   (
                                        SELECT
                                             CT01_DESC,
                                             SUM( AMOUNT ) AMOUNT
                                        FROM
                                             (
                                                  SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01,
                                                       TA02_RETURNS TA02
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                                       AND TT01.CSTD_TRAN_TYPE IN(
                                                            SELECT
                                                                 INTERNAL_CODE
                                                            FROM
                                                                 STD_CODES
                                                            WHERE
                                                                 GROUP_CODE = 'TRANSACTION_TYPE'
                                                                 AND PARENT_INTERNAL_CODE IN(
                                                                      'TA',
                                                                      'AJ'
                                                                 )
                                                       )
                                                       AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                                       AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                                       AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                                       AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                                       AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                                       AND TA02.CA02_RETURN_ID = #return_id:String#
                                                       AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                                       AND(
                                                            TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                            OR(
                                                                 TT01.CSTD_ENTITY = 'PEN'
                                                                 AND TT01.CT01_ENTITY_ID IN(
                                                                      SELECT
                                                                           TT28.CT28_ID
                                                                      FROM
                                                                           TT28_PENALTY TT28
                                                                      WHERE
                                                                           TT28.CSTD_ENTITY = 'RET'
                                                                           AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                           AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                                 )
                                                            )
                                                       )
                                             UNION ALL SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  WHERE
                                                       TT01.CR01_INTERNAL_ID = #internal_id:String#
                                                       AND TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                                       AND TT01.CSTD_TRAN_TYPE IN(
                                                            SELECT
                                                                 INTERNAL_CODE
                                                            FROM
                                                                 STD_CODES
                                                            WHERE
                                                                 GROUP_CODE = 'TRANSACTION_TYPE'
                                                                 AND PARENT_INTERNAL_CODE IN(
                                                                      'TA',
                                                                      'AJ'
                                                                 )
                                                       )
                                                       AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                                       AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                                       AND(
                                                            TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                            OR(
                                                                 TT01.CSTD_ENTITY = 'PEN'
                                                                 AND TT01.CT01_ENTITY_ID IN(
                                                                      SELECT
                                                                           TT28.CT28_ID
                                                                      FROM
                                                                           TT28_PENALTY TT28
                                                                      WHERE
                                                                           TT28.CSTD_ENTITY = 'RET'
                                                                           AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                           AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                                 )
                                                            )
                                                       )
                                             ) TAB1
                                        GROUP BY
                                             CT01_DESC
                                   ) TAB
                         )
               UNION ALL SELECT
                         UNPAID_AMT,
                         CODE_DESC
                    FROM
                         (
                              SELECT
                                   CT01_DESC AS CODE_DESC,
                                   AMOUNT AS UNPAID_AMT
                              FROM
                                   (
                                        SELECT
                                             CT01_DESC,
                                             SUM( AMOUNT ) AMOUNT
                                        FROM
                                             (
                                                  SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01,
                                                       TA02_RETURNS TA02
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                                       AND TT01.CSTD_TRAN_TYPE IN(
                                                            SELECT
                                                                 INTERNAL_CODE
                                                            FROM
                                                                 STD_CODES
                                                            WHERE
                                                                 GROUP_CODE = 'TRANSACTION_TYPE'
                                                                 AND PARENT_INTERNAL_CODE IN(
                                                                      'TA',
                                                                      'AJ'
                                                                 )
                                                       )
                                                       AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                                       AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                                       AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                                       AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                                       AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                                       AND TA02.CA02_RETURN_ID = #return_id:String#
                                                       AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                             UNION ALL SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                                       AND TT01.CSTD_TRAN_TYPE IN(
                                                            SELECT
                                                                 INTERNAL_CODE
                                                            FROM
                                                                 STD_CODES
                                                            WHERE
                                                                 GROUP_CODE = 'TRANSACTION_TYPE'
                                                                 AND PARENT_INTERNAL_CODE IN(
                                                                      'TA',
                                                                      'AJ'
                                                                 )
                                                       )
                                                       AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                                       AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                             ) TAB1
                                        GROUP BY
                                             CT01_DESC
                                   ) TAB
                         ) UNPAID
               UNION ALL SELECT
                         UNPAID_AMT,
                         CODE_DESC
                    FROM
                         (
                              SELECT
                                   CT01_DESC AS CODE_DESC,
                                   AMOUNT AS UNPAID_AMT
                              FROM
                                   (
                                        SELECT
                                             CT01_DESC,
                                             SUM( AMOUNT ) AMOUNT
                                        FROM
                                             (
                                                  SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE IN(
                                                            'PEN247',
                                                            'PEN247D'
                                                       )
                                                       AND TT01.CSTD_TRAN_TYPE IN(
                                                            SELECT
                                                                 INTERNAL_CODE
                                                            FROM
                                                                 STD_CODES
                                                            WHERE
                                                                 GROUP_CODE = 'TRANSACTION_TYPE'
                                                                 AND PARENT_INTERNAL_CODE IN(
                                                                      'TA',
                                                                      'AJ'
                                                                 )
                                                       )
                                                       AND TT01.CSTD_ALLOCATED_ENTITY = 'OBJ'
                                                       AND TT01.CT01_ALLOCATED_ENTITYID = #request_no:String#
                                             ) TAB1
                                        GROUP BY
                                             CT01_DESC
                                   ) TAB
                         )
               )
          GROUP BY
               CODE_DESC
     )</raw-find-entry>
    <raw-find-entry name="fetch_one_p2_issuance" cascade="false" web-service="false">SELECT
     MAX( CC03_ID ) ISSUANCE_CC03_ID,
     MAX( CC03_CREATE_ON ) ISSCC03CREON
FROM
     (
          SELECT
               CC03_ID,
               CC03_CREATE_ON
          FROM
               TC03_LETTER STL3
          JOIN TO02_REQUEST_DETAILS OBJ2 ON
               STL3.CC03_ENTITY_ID = OBJ2.CO01_REQUEST_NO
               AND OBJ2.CA02_RETURN_ID = #return_id:String#
          WHERE
               STL3.CSTD_ENTITY = 'OBJ'
               AND STL3.CR01_INTERNAL_ID = #internal_id:String#
               AND STL3.CSTD_LETTER_TYPE IN (
                    'LTR_OA01',
                    'LTR_OA02',
                    'LTR_OA12'
               )
     UNION SELECT
               CC03_ID,
               CC03_CREATE_ON
          FROM
               TC03_LETTER STL3
          WHERE
               STL3.CC03_ENTITY_ID = #return_id:String# || '-' || #return_version:String#
               AND STL3.CR01_INTERNAL_ID = #internal_id:String#
               AND STL3.CSTD_LETTER_TYPE IN (
                    'LTR_RP12',
                    'LTR_AC07'
               )
     )</raw-find-entry>
    <raw-find-entry name="fetch_one_p3_preftn" cascade="false" web-service="false">SELECT
     MAX( TC03.CC03_ID ) PREVIOUS_FTN_CC03_ID,
     MAX( TC03.CC03_CREATE_ON ) PREFTNCC03CREON
FROM
     TC03_LETTER TC03
JOIN TA02_RETURNS SRET2 ON
     TC03.CR01_INTERNAL_ID = #internal_id:String#
     AND TC03.CR03_BRANCH_CODE = SRET2.CR03_BRANCH_CODE
     AND TC03.CC03_YEAR = SRET2.CA02_TAX_YEAR
     AND TC03.CC03_FILING_PERIOD = SRET2.CA02_TAX_PERIOD
     AND TC03.CA09_TAX_TYPE_CODE = SRET2.CA09_TAX_TYPE_CODE
     AND SRET2.CA02_RETURN_ID = #return_id:String#
     AND TC03.CSTD_LETTER_TYPE = 'LTR_EF02'
     AND TC03.CC03_ID &lt; #letter_id:String#</raw-find-entry>
    <raw-find-entry name="fetch_one_p4_paidfrm24" cascade="false" web-service="false">SELECT
     SUM( AVAILABLE_AMT ) PAIDTAXFRM24AMTNUM
FROM
     (
          SELECT
               AMOUNT AS AVAILABLE_AMT
          FROM
               (
                    SELECT
                         SUM( AMOUNT ) AMOUNT
                    FROM
                         (
                              SELECT
                                   CASE
                                        WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                   END AMOUNT
                              FROM
                                   TT01_TRANSACTIONS TT01
                              JOIN STD_CODES ON
                                   TT01.CSTD_TRAN_TYPE = INTERNAL_CODE
                                   AND GROUP_CODE = 'TRANSACTION_TYPE'
                                   AND PARENT_INTERNAL_CODE IN(
                                        'PA',
                                        'RL'
                                   )
                              JOIN TA02_RETURNS TA02 ON
                                   TA02.CA02_RETURN_ID = #return_id:String#
                                   AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                   AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                   AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                   AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                   AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                   AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                              WHERE
                                   TT01.CT01_REVERSED_FLAG = 'N'
                                   AND TT01.CT01_CLEARED_FLAG = 'Y'
                                   AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                   AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                   AND TT01.CSTD_LIABILITY_TYPE &lt;&gt; 'ASSLS'
                                   AND TT01.CSTD_LIABILITY_TYPE &lt;&gt; 'RET186N2'
                         UNION ALL SELECT
                                   CASE
                                        WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                   END AMOUNT
                              FROM
                                   TT01_TRANSACTIONS TT01
                              JOIN STD_CODES ON
                                   TT01.CSTD_TRAN_TYPE = INTERNAL_CODE
                                   AND GROUP_CODE = 'TRANSACTION_TYPE'
                                   AND PARENT_INTERNAL_CODE IN(
                                        'PA',
                                        'RL'
                                   )
                              WHERE
                                   TT01.CT01_REVERSED_FLAG = 'N'
                                   AND TT01.CT01_CLEARED_FLAG = 'Y'
                                   AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                   AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                   AND TT01.CSTD_LIABILITY_TYPE &lt;&gt; 'ASSLS'
                                   AND TT01.CSTD_LIABILITY_TYPE &lt;&gt; 'RET186N2'
                                   AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                   AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                         ) TAB1
               ) TAB
          WHERE
               TAB.AMOUNT &gt; 0
     ) AVAILABLE</raw-find-entry>
    <raw-find-entry name="fetch_one_p5_paidtax" cascade="false" web-service="false">SELECT
     SUM( AVAILABLE_AMT ) PAIDTAXAVIAMT
FROM
     (
          SELECT
               AMOUNT AS AVAILABLE_AMT
          FROM
               (
                    SELECT
                         SUM( AMOUNT ) AMOUNT
                    FROM
                         (
                              SELECT
                                   CASE
                                        WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                   END AMOUNT
                              FROM
                                   TT01_TRANSACTIONS TT01
                              JOIN STD_CODES STD0 ON
                                   TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                   AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                   AND STD0.PARENT_INTERNAL_CODE IN(
                                        'PA',
                                        'RL'
                                   )
                              JOIN TA02_RETURNS TA02 ON
                                   TA02.CA02_RETURN_ID = #return_id:String#
                                   AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                   AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                   AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                   AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                   AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                   AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                              WHERE
                                   TT01.CT01_REVERSED_FLAG = 'N'
                                   AND TT01.CT01_CLEARED_FLAG = 'Y'
                                   AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                   AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                   AND TT01.CSTD_LIABILITY_TYPE &lt;&gt; 'ASSLS'
                         UNION ALL SELECT
                                   CASE
                                        WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                   END AMOUNT
                              FROM
                                   TT01_TRANSACTIONS TT01
                              JOIN STD_CODES STD0 ON
                                   TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                   AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                   AND STD0.PARENT_INTERNAL_CODE IN(
                                        'PA',
                                        'RL'
                                   )
                              WHERE
                                   TT01.CT01_REVERSED_FLAG = 'N'
                                   AND TT01.CT01_CLEARED_FLAG = 'Y'
                                   AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                   AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                   AND TT01.CSTD_LIABILITY_TYPE &lt;&gt; 'ASSLS'
                                   AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                   AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                         ) TAB1
               ) TAB
          WHERE
               TAB.AMOUNT &gt; 0
     ) AVAILABLE</raw-find-entry>
    <raw-find-entry name="fetch_one_p6_sub_tac_ce07_sum" cascade="false" web-service="false">SELECT
     SUM( AVAILABLE_AMT ) SUBTACCE07SUMUNPAMT
FROM
     (
          SELECT
               CT01_DESC AS CODE_DESC,
               AMOUNT AS AVAILABLE_AMT
          FROM
               (
                    SELECT
                         CT01_DESC,
                         SUM( AMOUNT ) AMOUNT
                    FROM
                         (
                              SELECT
                                   TT01.CT01_DESC,
                                   CASE
                                        WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                   END AMOUNT
                              FROM
                                   TT01_TRANSACTIONS TT01,
                                   TAX_RETURNS TA02
                              WHERE
                                   TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                   AND TT01.CT01_REVERSED_FLAG = 'N'
                                   AND TT01.CT01_CLEARED_FLAG = 'Y'
                                   AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                   AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                   AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                             INTERNAL_CODE
                                        FROM
                                             STD_CODES
                                        WHERE
                                             GROUP_CODE = 'TRANSACTION_TYPE'
                                             AND PARENT_INTERNAL_CODE IN(
                                                  'TA',
                                                  'PA',
                                                  'RL'
                                             )
                                   )
                                   AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                   AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                   AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                   AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                   AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                   AND TA02.CA02_RETURN_ID = #return_id:String#
                                   AND TA02.CA02_RETURN_VERSION = #return_version:String#
                         UNION ALL SELECT
                                   TT01.CT01_DESC,
                                   CASE
                                        WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                   END AMOUNT
                              FROM
                                   TT01_TRANSACTIONS TT01
                              WHERE
                                   TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                   AND TT01.CT01_REVERSED_FLAG = 'N'
                                   AND TT01.CT01_CLEARED_FLAG = 'Y'
                                   AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                   AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                   AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                             INTERNAL_CODE
                                        FROM
                                             STD_CODES
                                        WHERE
                                             GROUP_CODE = 'TRANSACTION_TYPE'
                                             AND PARENT_INTERNAL_CODE IN(
                                                  'TA',
                                                  'PA',
                                                  'RL'
                                             )
                                   )
                                   AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                   AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                         ) TAB1
                    GROUP BY
                         CT01_DESC
               ) TAB
          WHERE
               TAB.AMOUNT &gt; 0
     ) AVAILABLE</raw-find-entry>
    <raw-find-entry name="fetch_one_p7_sub_tac_ce06_sum" cascade="false" web-service="false">SELECT
     SUM( UNPAID_AMT ) SUBTACCE06SUMDISUNPAMT
FROM
     (
          SELECT
               SUM( UNPAID_AMT ) UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         UNPAID_AMT,
                         CODE_DESC
                    FROM
                         (
                              SELECT
                                   CT01_DESC AS CODE_DESC,
                                   AMOUNT AS UNPAID_AMT
                              FROM
                                   (
                                        SELECT
                                             CT01_DESC,
                                             SUM( AMOUNT ) AMOUNT
                                        FROM
                                             (
                                                  SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  JOIN STD_CODES STD0 ON
                                                       TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                                       AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND STD0.PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                                  JOIN TA02_RETURNS TA02 ON
                                                       TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                                       AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                                       AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                                       AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                                       AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                                       AND TA02.CA02_RETURN_ID = #return_id:String#
                                                       AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE IN(
                                                            'LFPEN',
                                                            'LRPEN',
                                                            'LPPEN'
                                                       )
                                                       AND(
                                                            TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                            OR(
                                                                 TT01.CT01_ENTITY_ID IN(
                                                                      SELECT
                                                                           TT28.CT28_ID
                                                                      FROM
                                                                           TT28_PENALTY TT28
                                                                      WHERE
                                                                           TT28.CSTD_ENTITY = 'RET'
                                                                           AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                           AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                                 )
                                                            )
                                                       )
                                             UNION ALL SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  JOIN STD_CODES STD0 ON
                                                       TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                                       AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND STD0.PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                                  JOIN TA02_RETURNS TA02 ON
                                                       TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                                       AND TA02.CA02_RETURN_ID = #return_id:String#
                                                       AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE IN(
                                                            'LFPEN',
                                                            'LRPEN',
                                                            'LPPEN'
                                                       )
                                                       AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                                       AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                                       AND(
                                                            TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                            OR(
                                                                 TT01.CT01_ENTITY_ID IN(
                                                                      SELECT
                                                                           TT28.CT28_ID
                                                                      FROM
                                                                           TT28_PENALTY TT28
                                                                      WHERE
                                                                           TT28.CSTD_ENTITY = 'RET'
                                                                           AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                           AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                                 )
                                                            )
                                                       )
                                             ) TAB1
                                        GROUP BY
                                             CT01_DESC
                                   ) TAB
                         ) UNPAID
               UNION ALL SELECT
                         UNPAID_AMT,
                         CODE_DESC
                    FROM
                         (
                              SELECT
                                   CT01_DESC AS CODE_DESC,
                                   AMOUNT AS UNPAID_AMT
                              FROM
                                   (
                                        SELECT
                                             CT01_DESC,
                                             SUM( AMOUNT ) AMOUNT
                                        FROM
                                             (
                                                  SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  JOIN STD_CODES STD0 ON
                                                       TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                                       AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND STD0.PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                                  JOIN TA02_RETURNS TA02 ON
                                                       TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                                       AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                                       AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                                       AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                                       AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                                       AND TA02.CA02_RETURN_ID = #return_id:String#
                                                       AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                                       AND(
                                                            TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                            OR(
                                                                 TT01.CT01_ENTITY_ID IN(
                                                                      SELECT
                                                                           TT28.CT28_ID
                                                                      FROM
                                                                           TT28_PENALTY TT28
                                                                      WHERE
                                                                           TT28.CSTD_ENTITY = 'RET'
                                                                           AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                           AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                                 )
                                                            )
                                                       )
                                             UNION ALL SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  JOIN STD_CODES STD0 ON
                                                       TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                                       AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND STD0.PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                                  JOIN TA02_RETURNS TA02 ON
                                                       TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                                       AND TA02.CA02_RETURN_ID = #return_id:String#
                                                       AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                                       AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                                       AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                                       AND(
                                                            TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                            OR(
                                                                 TT01.CT01_ENTITY_ID IN(
                                                                      SELECT
                                                                           TT28.CT28_ID
                                                                      FROM
                                                                           TT28_PENALTY TT28
                                                                      WHERE
                                                                           TT28.CSTD_ENTITY = 'RET'
                                                                           AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                           AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                                 )
                                                            )
                                                       )
                                             ) TAB1
                                        GROUP BY
                                             CT01_DESC
                                   ) TAB
                         )
               UNION ALL SELECT
                         UNPAID_AMT,
                         CODE_DESC
                    FROM
                         (
                              SELECT
                                   CT01_DESC AS CODE_DESC,
                                   AMOUNT AS UNPAID_AMT
                              FROM
                                   (
                                        SELECT
                                             CT01_DESC,
                                             SUM( AMOUNT ) AMOUNT
                                        FROM
                                             (
                                                  SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  JOIN STD_CODES STD0 ON
                                                       TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                                       AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND STD0.PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                                  JOIN TA02_RETURNS TA02 ON
                                                       TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                                       AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                                       AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                                       AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                                       AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                                       AND TA02.CA02_RETURN_ID = #return_id:String#
                                                       AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                             UNION ALL SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  JOIN STD_CODES STD0 ON
                                                       TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                                       AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND STD0.PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                                       AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                                       AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                             ) TAB1
                                        GROUP BY
                                             CT01_DESC
                                   ) TAB
                         ) UNPAID
               UNION ALL SELECT
                         UNPAID_AMT,
                         CODE_DESC
                    FROM
                         (
                              SELECT
                                   CT01_DESC AS CODE_DESC,
                                   AMOUNT AS UNPAID_AMT
                              FROM
                                   (
                                        SELECT
                                             CT01_DESC,
                                             SUM( AMOUNT ) AMOUNT
                                        FROM
                                             (
                                                  SELECT
                                                       TT01.CT01_DESC,
                                                       CASE
                                                            WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                            ELSE TT01.CT01_AMOUNT
                                                       END AMOUNT
                                                  FROM
                                                       TT01_TRANSACTIONS TT01
                                                  JOIN STD_CODES STD0 ON
                                                       TT01.CSTD_TRAN_TYPE = STD0.INTERNAL_CODE
                                                       AND STD0.GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND STD0.PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                                  WHERE
                                                       TT01.CT01_REVERSED_FLAG = 'N'
                                                       AND TT01.CT01_CLEARED_FLAG = 'Y'
                                                       AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                                       AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                                       AND TT01.CSTD_LIABILITY_TYPE IN(
                                                            'PEN247',
                                                            'PEN247D'
                                                       )
                                                       AND TT01.CSTD_ALLOCATED_ENTITY = 'OBJ'
                                                       AND TT01.CT01_ALLOCATED_ENTITYID = #request_no:String#
                                             ) TAB1
                                        GROUP BY
                                             CT01_DESC
                                   ) TAB
                         )
               )
          GROUP BY
               CODE_DESC
     )</raw-find-entry>
    <raw-find-entry name="fetch_one_p8_sub_tac_ce06_display_flag" cascade="false" web-service="false">SELECT
     SUM( UNPAID_AMT ) SUBTACCE06DISFGUNPAMT
FROM
     (
          SELECT
               UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         CT01_DESC AS CODE_DESC,
                         AMOUNT AS UNPAID_AMT
                    FROM
                         (
                              SELECT
                                   CT01_DESC,
                                   SUM( AMOUNT ) AMOUNT
                              FROM
                                   (
                                        SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01,
                                             TA02_RETURNS TA02
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE IN(
                                                  'LFPEN',
                                                  'LRPEN',
                                                  'LPPEN'
                                             )
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                             AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                             AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                             AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                             AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                             AND TA02.CA02_RETURN_ID = #return_id:String#
                                             AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                             AND(
                                                  TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                  OR(
                                                       TT01.CSTD_ENTITY = 'PEN'
                                                       AND TT01.CT01_ENTITY_ID IN(
                                                            SELECT
                                                                 TT28.CT28_ID
                                                            FROM
                                                                 TT28_PENALTY TT28
                                                            WHERE
                                                                 TT28.CSTD_ENTITY = 'RET'
                                                                 AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                 AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                       )
                                                  )
                                             )
                                   UNION ALL SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01
                                        WHERE
                                             TT01.CR01_INTERNAL_ID = #internal_id:String#
                                             AND TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE IN(
                                                  'LFPEN',
                                                  'LRPEN',
                                                  'LPPEN'
                                             )
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                             AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                             AND(
                                                  TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                  OR(
                                                       TT01.CSTD_ENTITY = 'PEN'
                                                       AND TT01.CT01_ENTITY_ID IN(
                                                            SELECT
                                                                 TT28.CT28_ID
                                                            FROM
                                                                 TT28_PENALTY TT28
                                                            WHERE
                                                                 TT28.CSTD_ENTITY = 'RET'
                                                                 AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                 AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                       )
                                                  )
                                             )
                                   ) TAB1
                              GROUP BY
                                   CT01_DESC
                         ) TAB
               ) UNPAID
     UNION ALL SELECT
               UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         CT01_DESC AS CODE_DESC,
                         AMOUNT AS UNPAID_AMT
                    FROM
                         (
                              SELECT
                                   CT01_DESC,
                                   SUM( AMOUNT ) AMOUNT
                              FROM
                                   (
                                        SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01,
                                             TA02_RETURNS TA02
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                             AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                             AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                             AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                             AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                             AND TA02.CA02_RETURN_ID = #return_id:String#
                                             AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                             AND(
                                                  TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                  OR(
                                                       TT01.CSTD_ENTITY = 'PEN'
                                                       AND TT01.CT01_ENTITY_ID IN(
                                                            SELECT
                                                                 TT28.CT28_ID
                                                            FROM
                                                                 TT28_PENALTY TT28
                                                            WHERE
                                                                 TT28.CSTD_ENTITY = 'RET'
                                                                 AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                 AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                       )
                                                  )
                                             )
                                   UNION ALL SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01
                                        WHERE
                                             TT01.CR01_INTERNAL_ID = #internal_id:String#
                                             AND TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                             AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                             AND(
                                                  TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                  OR(
                                                       TT01.CSTD_ENTITY = 'PEN'
                                                       AND TT01.CT01_ENTITY_ID IN(
                                                            SELECT
                                                                 TT28.CT28_ID
                                                            FROM
                                                                 TT28_PENALTY TT28
                                                            WHERE
                                                                 TT28.CSTD_ENTITY = 'RET'
                                                                 AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                 AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                       )
                                                  )
                                             )
                                   ) TAB1
                              GROUP BY
                                   CT01_DESC
                         ) TAB
               )
     UNION ALL SELECT
               UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         CT01_DESC AS CODE_DESC,
                         AMOUNT AS UNPAID_AMT
                    FROM
                         (
                              SELECT
                                   CT01_DESC,
                                   SUM( AMOUNT ) AMOUNT
                              FROM
                                   (
                                        SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01,
                                             TA02_RETURNS TA02
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                             AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                             AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                             AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                             AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                             AND TA02.CA02_RETURN_ID = #return_id:String#
                                             AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                   UNION ALL SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                             AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                   ) TAB1
                              GROUP BY
                                   CT01_DESC
                         ) TAB
               ) UNPAID
     UNION ALL SELECT
               UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         CT01_DESC AS CODE_DESC,
                         AMOUNT AS UNPAID_AMT
                    FROM
                         (
                              SELECT
                                   CT01_DESC,
                                   SUM( AMOUNT ) AMOUNT
                              FROM
                                   (
                                        SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE IN(
                                                  'PEN247',
                                                  'PEN247D'
                                             )
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CSTD_ALLOCATED_ENTITY = 'OBJ'
                                             AND TT01.CT01_ALLOCATED_ENTITYID = #request_no:String#
                                   ) TAB1
                              GROUP BY
                                   CT01_DESC
                         ) TAB
               )
     )</raw-find-entry>
    <raw-find-entry name="fetch_one_p9_sub_unpaid_flag" cascade="false" web-service="false">SELECT
     SUM( UNPAID_AMT ) SUBUNPFGAMTNUM
FROM
     (
          SELECT
               UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         CT01_DESC AS CODE_DESC,
                         AMOUNT AS UNPAID_AMT
                    FROM
                         (
                              SELECT
                                   CT01_DESC,
                                   SUM( AMOUNT ) AMOUNT
                              FROM
                                   (
                                        SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01,
                                             TA02_RETURNS TA02
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE IN(
                                                  'LFPEN',
                                                  'LRPEN',
                                                  'LPPEN'
                                             )
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                             AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                             AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                             AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                             AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                             AND TA02.CA02_RETURN_ID = #return_id:String#
                                             AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                             AND(
                                                  TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                  OR(
                                                       TT01.CSTD_ENTITY = 'PEN'
                                                       AND TT01.CT01_ENTITY_ID IN(
                                                            SELECT
                                                                 TT28.CT28_ID
                                                            FROM
                                                                 TT28_PENALTY TT28
                                                            WHERE
                                                                 TT28.CSTD_ENTITY = 'RET'
                                                                 AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                 AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                       )
                                                  )
                                             )
                                   UNION ALL SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01
                                        WHERE
                                             TT01.CR01_INTERNAL_ID = #internal_id:String#
                                             AND TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE IN(
                                                  'LFPEN',
                                                  'LRPEN',
                                                  'LPPEN'
                                             )
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                             AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                             AND(
                                                  TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                  OR(
                                                       TT01.CSTD_ENTITY = 'PEN'
                                                       AND TT01.CT01_ENTITY_ID IN(
                                                            SELECT
                                                                 TT28.CT28_ID
                                                            FROM
                                                                 TT28_PENALTY TT28
                                                            WHERE
                                                                 TT28.CSTD_ENTITY = 'RET'
                                                                 AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                 AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                       )
                                                  )
                                             )
                                   ) TAB1
                              GROUP BY
                                   CT01_DESC
                         ) TAB
               ) UNPAID
     UNION ALL SELECT
               UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         CT01_DESC AS CODE_DESC,
                         AMOUNT AS UNPAID_AMT
                    FROM
                         (
                              SELECT
                                   CT01_DESC,
                                   SUM( AMOUNT ) AMOUNT
                              FROM
                                   (
                                        SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01,
                                             TA02_RETURNS TA02
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                             AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                             AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                             AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                             AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                             AND TA02.CA02_RETURN_ID = #return_id:String#
                                             AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                             AND(
                                                  TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                  OR(
                                                       TT01.CSTD_ENTITY = 'PEN'
                                                       AND TT01.CT01_ENTITY_ID IN(
                                                            SELECT
                                                                 TT28.CT28_ID
                                                            FROM
                                                                 TT28_PENALTY TT28
                                                            WHERE
                                                                 TT28.CSTD_ENTITY = 'RET'
                                                                 AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                 AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                       )
                                                  )
                                             )
                                   UNION ALL SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01
                                        WHERE
                                             TT01.CR01_INTERNAL_ID = #internal_id:String#
                                             AND TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                             AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                             AND(
                                                  TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                                  OR(
                                                       TT01.CSTD_ENTITY = 'PEN'
                                                       AND TT01.CT01_ENTITY_ID IN(
                                                            SELECT
                                                                 TT28.CT28_ID
                                                            FROM
                                                                 TT28_PENALTY TT28
                                                            WHERE
                                                                 TT28.CSTD_ENTITY = 'RET'
                                                                 AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= #return_id:String#
                                                                 AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= #return_version:String#
                                                       )
                                                  )
                                             )
                                   ) TAB1
                              GROUP BY
                                   CT01_DESC
                         ) TAB
               )
     UNION ALL SELECT
               UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         CT01_DESC AS CODE_DESC,
                         AMOUNT AS UNPAID_AMT
                    FROM
                         (
                              SELECT
                                   CT01_DESC,
                                   SUM( AMOUNT ) AMOUNT
                              FROM
                                   (
                                        SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01,
                                             TA02_RETURNS TA02
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                             AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                             AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                             AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                             AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                             AND TA02.CA02_RETURN_ID = #return_id:String#
                                             AND TA02.CA02_RETURN_VERSION = #return_version:String#
                                   UNION ALL SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                             AND TT01.CT01_ALLOCATED_ENTITYID = #return_id:String#
                                   ) TAB1
                              GROUP BY
                                   CT01_DESC
                         ) TAB
               ) UNPAID
     UNION ALL SELECT
               UNPAID_AMT,
               CODE_DESC
          FROM
               (
                    SELECT
                         CT01_DESC AS CODE_DESC,
                         AMOUNT AS UNPAID_AMT
                    FROM
                         (
                              SELECT
                                   CT01_DESC,
                                   SUM( AMOUNT ) AMOUNT
                              FROM
                                   (
                                        SELECT
                                             TT01.CT01_DESC,
                                             CASE
                                                  WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                                  ELSE TT01.CT01_AMOUNT
                                             END AMOUNT
                                        FROM
                                             TT01_TRANSACTIONS TT01
                                        WHERE
                                             TT01.CT01_REVERSED_FLAG = 'N'
                                             AND TT01.CT01_CLEARED_FLAG = 'Y'
                                             AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                             AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                             AND TT01.CSTD_LIABILITY_TYPE IN(
                                                  'PEN247',
                                                  'PEN247D'
                                             )
                                             AND TT01.CSTD_TRAN_TYPE IN(
                                                  SELECT
                                                       INTERNAL_CODE
                                                  FROM
                                                       STD_CODES
                                                  WHERE
                                                       GROUP_CODE = 'TRANSACTION_TYPE'
                                                       AND PARENT_INTERNAL_CODE IN(
                                                            'TA',
                                                            'AJ'
                                                       )
                                             )
                                             AND TT01.CSTD_ALLOCATED_ENTITY = 'OBJ'
                                             AND TT01.CT01_ALLOCATED_ENTITYID = #request_no:String#
                                   ) TAB1
                              GROUP BY
                                   CT01_DESC
                         ) TAB
               )
     )</raw-find-entry>
  </data-model>
  <data-model readonly="true" name="SL37_GENERAL_FTN_LETTER_PENALTIES" tag-name="SL37_GENERAL_FTN_LETTER_PENALTIES" table="SL37_GENERAL_FTN_LETTER_PENALTIES" order="" web-service="false" accept-null="false" isEntity="false" withExecuteDate="false">
    <property name="UNPAID_AMT" type="String" column-type="VARCHAR" column="" title="" default-value="" tag-name="UNPAID_AMT" iskey="true" isSequence="false" find-by="false" web-service="false" isAudit="false" isSensitive="false" />
    <property name="CODE_DESC" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="CODE_DESC" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isAudit="false" isSensitive="false" />
    <raw-find-entry name="fetch_all" cascade="false" web-service="false">SELECT
    SUM( UNPAID_AMT ) UNPAID_AMT,
    CODE_DESC
FROM
    (
        SELECT
            UNPAID_AMT,
            CODE_DESC
        FROM
            (
                SELECT
                    CT01_DESC AS CODE_DESC,
                    AMOUNT AS UNPAID_AMT
                FROM
                    (
                        SELECT
                            CT01_DESC,
                            SUM( AMOUNT ) AMOUNT
                        FROM
                            (
                                SELECT
                                    TT01.CT01_DESC,
                                    CASE
                                        WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                    END AMOUNT
                                FROM
                                    TT01_TRANSACTIONS TT01,
                                    TAX_RETURNS TA02
                                WHERE
                                    TT01.CT01_REVERSED_FLAG = 'N'
                                    AND TT01.CT01_CLEARED_FLAG = 'Y'
                                    AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                    AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                    AND TT01.CSTD_LIABILITY_TYPE IN(
                                        'LFPEN',
                                        'LRPEN',
                                        'LPPEN'
                                    )
                                    AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                            INTERNAL_CODE
                                        FROM
                                            STD_CODES
                                        WHERE
                                            GROUP_CODE = 'TRANSACTION_TYPE'
                                            AND PARENT_INTERNAL_CODE IN(
                                                'TA',
                                                'AJ'
                                            )
                                    )
                                    AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                    AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                    AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                    AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                    AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                    AND TA02.CA02_RETURN_ID = '#return_id:String#'
                                    AND TA02.CA02_RETURN_VERSION = '#return_version:String#'
                                    AND(
                                        TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                        OR(
                                            TT01.CSTD_ENTITY = 'PEN'
                                            AND TT01.CT01_ENTITY_ID IN(
                                                SELECT
                                                    TT28.CT28_ID
                                                FROM
                                                    TT28_PENALTY TT28
                                                WHERE
                                                    TT28.CSTD_ENTITY = 'RET'
                                                    AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= '#return_id:String#'
                                                    AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= '#return_version:String#'
                                            )
                                        )
                                    )
                            UNION ALL SELECT
                                    TT01.CT01_DESC,
                                    CASE
                                        WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                    END AMOUNT
                                FROM
                                    TT01_TRANSACTIONS TT01
                                WHERE
                                    TT01.CR01_INTERNAL_ID = '#internal_id:String#'
                                    AND TT01.CT01_REVERSED_FLAG = 'N'
                                    AND TT01.CT01_CLEARED_FLAG = 'Y'
                                    AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                    AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                    AND TT01.CSTD_LIABILITY_TYPE IN(
                                        'LFPEN',
                                        'LRPEN',
                                        'LPPEN'
                                    )
                                    AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                            INTERNAL_CODE
                                        FROM
                                            STD_CODES
                                        WHERE
                                            GROUP_CODE = 'TRANSACTION_TYPE'
                                            AND PARENT_INTERNAL_CODE IN(
                                                'TA',
                                                'AJ'
                                            )
                                    )
                                    AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                    AND TT01.CT01_ALLOCATED_ENTITYID = '#return_id:String#'
                                    AND(
                                        TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                        OR(
                                            TT01.CSTD_ENTITY = 'PEN'
                                            AND TT01.CT01_ENTITY_ID IN(
                                                SELECT
                                                    TT28.CT28_ID
                                                FROM
                                                    TT28_PENALTY TT28
                                                WHERE
                                                    TT28.CSTD_ENTITY = 'RET'
                                                    AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= '#return_id:String#'
                                                    AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= '#return_version:String#'
                                            )
                                        )
                                    )
                            ) TAB1
                        GROUP BY
                            CT01_DESC
                    ) TAB
            ) UNPAID
    UNION ALL SELECT
            UNPAID_AMT,
            CODE_DESC
        FROM
            (
                SELECT
                    CT01_DESC AS CODE_DESC,
                    AMOUNT AS UNPAID_AMT
                FROM
                    (
                        SELECT
                            CT01_DESC,
                            SUM( AMOUNT ) AMOUNT
                        FROM
                            (
                                SELECT
                                    TT01.CT01_DESC,
                                    CASE
                                        WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                    END AMOUNT
                                FROM
                                    TT01_TRANSACTIONS TT01,
                                    TAX_RETURNS TA02
                                WHERE
                                    TT01.CT01_REVERSED_FLAG = 'N'
                                    AND TT01.CT01_CLEARED_FLAG = 'Y' -- AND TT01.CSTD_LIABILITY_TYPE IN ('LFPEN','LRPEN','LPPEN')
                                    AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                    AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                    AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                    AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                            INTERNAL_CODE
                                        FROM
                                            STD_CODES
                                        WHERE
                                            GROUP_CODE = 'TRANSACTION_TYPE'
                                            AND PARENT_INTERNAL_CODE IN(
                                                'TA',
                                                'AJ'
                                            )
                                    )
                                    AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                    AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                    AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                    AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                    AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                    AND TA02.CA02_RETURN_ID = '#return_id:String#'
                                    AND TA02.CA02_RETURN_VERSION = '#return_version:String#'
                                    AND(
                                        TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                        OR(
                                            TT01.CSTD_ENTITY = 'PEN'
                                            AND TT01.CT01_ENTITY_ID IN(
                                                SELECT
                                                    TT28.CT28_ID
                                                FROM
                                                    TT28_PENALTY TT28
                                                WHERE
                                                    TT28.CSTD_ENTITY = 'RET'
                                                    AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= '#return_id:String#'
                                                    AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= '#return_version:String#'
                                            )
                                        )
                                    )
                            UNION ALL SELECT
                                    TT01.CT01_DESC,
                                    CASE
                                        WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                    END AMOUNT
                                FROM
                                    TT01_TRANSACTIONS TT01
                                WHERE
                                    TT01.CR01_INTERNAL_ID = '#internal_id:String#'
                                    AND TT01.CT01_REVERSED_FLAG = 'N'
                                    AND TT01.CT01_CLEARED_FLAG = 'Y'
                                    AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                    AND TT01.CT01_VALUE_DATE &lt;= SYSDATE -- AND TT01.CSTD_LIABILITY_TYPE IN ('LFPEN','LRPEN','LPPEN')
                                    AND TT01.CSTD_LIABILITY_TYPE LIKE 'AUD%'
                                    AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                            INTERNAL_CODE
                                        FROM
                                            STD_CODES
                                        WHERE
                                            GROUP_CODE = 'TRANSACTION_TYPE'
                                            AND PARENT_INTERNAL_CODE IN(
                                                'TA',
                                                'AJ'
                                            )
                                    )
                                    AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                    AND TT01.CT01_ALLOCATED_ENTITYID = '#return_id:String#'
                                    AND(
                                        TT01.CSTD_ENTITY &lt;&gt; 'PEN'
                                        OR(
                                            TT01.CSTD_ENTITY = 'PEN'
                                            AND TT01.CT01_ENTITY_ID IN(
                                                SELECT
                                                    TT28.CT28_ID
                                                FROM
                                                    TT28_PENALTY TT28
                                                WHERE
                                                    TT28.CSTD_ENTITY = 'RET'
                                                    AND SUBSTR( TT28.CT28_ENTITY_ID, 1, INSTR( TT28.CT28_ENTITY_ID, '-' )- 1 )= '#return_id:String#'
                                                    AND TO_NUMBER( SUBSTR( TT28.CT28_ENTITY_ID, INSTR( TT28.CT28_ENTITY_ID, '-' )+ 1 ))&lt;= '#return_version:String#'
                                            )
                                        )
                                    )
                            ) TAB1
                        GROUP BY
                            CT01_DESC
                    ) TAB
            )
    UNION ALL SELECT
            UNPAID_AMT,
            CODE_DESC
        FROM
            (
                SELECT
                    CT01_DESC AS CODE_DESC,
                    AMOUNT AS UNPAID_AMT
                FROM
                    (
                        SELECT
                            CT01_DESC,
                            SUM( AMOUNT ) AMOUNT
                        FROM
                            (
                                SELECT
                                    TT01.CT01_DESC,
                                    CASE
                                        WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                    END AMOUNT
                                FROM
                                    TT01_TRANSACTIONS TT01,
                                    TAX_RETURNS TA02
                                WHERE
                                    TT01.CT01_REVERSED_FLAG = 'N'
                                    AND TT01.CT01_CLEARED_FLAG = 'Y'
                                    AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                    AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                    AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                    AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                            INTERNAL_CODE
                                        FROM
                                            STD_CODES
                                        WHERE
                                            GROUP_CODE = 'TRANSACTION_TYPE'
                                            AND PARENT_INTERNAL_CODE IN(
                                                'TA',
                                                'AJ'
                                            )
                                    )
                                    AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                                    AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                                    AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                                    AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                                    AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                                    AND TA02.CA02_RETURN_ID = '#return_id:String#'
                                    AND TA02.CA02_RETURN_VERSION = '#return_version:String#'
                            UNION ALL SELECT
                                    TT01.CT01_DESC,
                                    CASE
                                        WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                    END AMOUNT
                                FROM
                                    TT01_TRANSACTIONS TT01
                                WHERE
                                    TT01.CT01_REVERSED_FLAG = 'N'
                                    AND TT01.CT01_CLEARED_FLAG = 'Y'
                                    AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                    AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                    AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                                    AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                            INTERNAL_CODE
                                        FROM
                                            STD_CODES
                                        WHERE
                                            GROUP_CODE = 'TRANSACTION_TYPE'
                                            AND PARENT_INTERNAL_CODE IN(
                                                'TA',
                                                'AJ'
                                            )
                                    )
                                    AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                                    AND TT01.CT01_ALLOCATED_ENTITYID = '#return_id:String#'
                            ) TAB1
                        GROUP BY
                            CT01_DESC
                    ) TAB
            ) UNPAID
    UNION ALL SELECT
            UNPAID_AMT,
            CODE_DESC
        FROM
            (
                SELECT
                    CT01_DESC AS CODE_DESC,
                    AMOUNT AS UNPAID_AMT
                FROM
                    (
                        SELECT
                            CT01_DESC,
                            SUM( AMOUNT ) AMOUNT
                        FROM
                            (
                                SELECT
                                    TT01.CT01_DESC,
                                    CASE
                                        WHEN TT01.CSTD_DC = 'CT' THEN 0 - TT01.CT01_AMOUNT
                                        ELSE TT01.CT01_AMOUNT
                                    END AMOUNT
                                FROM
                                    TT01_TRANSACTIONS TT01
                                WHERE
                                    TT01.CT01_REVERSED_FLAG = 'N'
                                    AND TT01.CT01_CLEARED_FLAG = 'Y'
                                    AND TT01.CT01_FINALIZED_FLAG = 'Y'
                                    AND TT01.CT01_VALUE_DATE &lt;= SYSDATE
                                    AND TT01.CSTD_LIABILITY_TYPE IN(
                                        'PEN247',
                                        'PEN247D'
                                    )
                                    AND TT01.CSTD_TRAN_TYPE IN(
                                        SELECT
                                            INTERNAL_CODE
                                        FROM
                                            STD_CODES
                                        WHERE
                                            GROUP_CODE = 'TRANSACTION_TYPE'
                                            AND PARENT_INTERNAL_CODE IN(
                                                'TA',
                                                'AJ'
                                            )
                                    )
                                    AND TT01.CSTD_ALLOCATED_ENTITY = 'OBJ'
                                    AND TT01.CT01_ALLOCATED_ENTITYID = '#request_no:String#'
                            ) TAB1
                        GROUP BY
                            CT01_DESC
                    ) TAB
            )
    )
GROUP BY
    CODE_DESC</raw-find-entry>
  </data-model>
  <data-model readonly="true" name="SL37_GENERAL_FTN_LETTER_REWARDS" tag-name="SL37_GENERAL_FTN_LETTER_REWARDS" table="SL37_GENERAL_FTN_LETTER_REWARDS" order="" web-service="false" accept-null="false" isEntity="false" withExecuteDate="false">
    <property name="AVAILABLE_AMT" type="String" column-type="VARCHAR" column="" title="" default-value="" tag-name="AVAILABLE_AMT" iskey="true" isSequence="false" find-by="false" web-service="false" isAudit="false" isSensitive="false" />
    <property name="CODE_DESC" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="CODE_DESC" iskey="false" isUserDefKey="false" isSequence="false" find-by="false" web-service="false" isAudit="false" isSensitive="false" />
    <raw-find-entry name="fetch_all" cascade="false" web-service="false">SELECT
    AVAILABLE_AMT,
    CODE_DESC
FROM
    (
        SELECT
            CT01_DESC AS CODE_DESC,
            AMOUNT AS AVAILABLE_AMT
        FROM
            (
                SELECT
                    MAX( CT01_DESC ) CT01_DESC,
                    SUM( AMOUNT ) AMOUNT
                FROM
                    (
                        SELECT
                            TT01.CT01_DESC,
                            CASE
                                WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                ELSE TT01.CT01_AMOUNT
                            END AMOUNT
                        FROM
                            TT01_TRANSACTIONS TT01,
                            TAX_RETURNS TA02
                        WHERE
                            TT01.CT01_VALUE_DATE &lt;= SYSDATE
                            AND TT01.CT01_REVERSED_FLAG = 'N'
                            AND TT01.CT01_CLEARED_FLAG = 'Y'
                            AND TT01.CT01_FINALIZED_FLAG = 'Y'
                            AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                            AND TT01.CSTD_TRAN_TYPE IN(
                                SELECT
                                    INTERNAL_CODE
                                FROM
                                    STD_CODES
                                WHERE
                                    GROUP_CODE = 'TRANSACTION_TYPE'
                                    AND PARENT_INTERNAL_CODE IN(
                                        'TA',
                                        'PA',
                                        'RL'
                                    )
                            )
                            AND TT01.CR01_INTERNAL_ID = TA02.CR01_INTERNAL_ID
                            AND TT01.CR03_BRANCH_CODE = TA02.CR03_BRANCH_CODE
                            AND TT01.CSTD_TAX_TYPE = TA02.CA09_TAX_TYPE_CODE
                            AND TT01.CT01_TAX_YEAR = TA02.CA02_TAX_YEAR
                            AND TT01.CT01_PERIOD = TA02.CA02_TAX_PERIOD
                            AND TA02.CA02_RETURN_ID = '#return_id:String#'
                            AND TA02.CA02_RETURN_VERSION = '#return_version:String#'
                    UNION ALL SELECT
                            TT01.CT01_DESC,
                            CASE
                                WHEN TT01.CSTD_DC = 'DT' THEN 0 - TT01.CT01_AMOUNT
                                ELSE TT01.CT01_AMOUNT
                            END AMOUNT
                        FROM
                            TT01_TRANSACTIONS TT01
                        WHERE
                            TT01.CT01_VALUE_DATE &lt;= SYSDATE
                            AND TT01.CT01_REVERSED_FLAG = 'N'
                            AND TT01.CT01_CLEARED_FLAG = 'Y'
                            AND TT01.CT01_FINALIZED_FLAG = 'Y'
                            AND TT01.CSTD_LIABILITY_TYPE = 'INTRES'
                            AND TT01.CSTD_TRAN_TYPE IN(
                                SELECT
                                    INTERNAL_CODE
                                FROM
                                    STD_CODES
                                WHERE
                                    GROUP_CODE = 'TRANSACTION_TYPE'
                                    AND PARENT_INTERNAL_CODE IN(
                                        'TA',
                                        'PA',
                                        'RL'
                                    )
                            )
                            AND TT01.CSTD_ALLOCATED_ENTITY = 'RET'
                            AND TT01.CT01_ALLOCATED_ENTITYID = '#return_id:String#'
                    ) TAB1
                GROUP BY
                    CT01_DESC
            ) TAB
        WHERE
            TAB.AMOUNT &gt; 0
    ) AVAILABLE</raw-find-entry>
  </data-model>
  <data-model name="TC00_TEC_LETTER_LOG" tag-name="TC00_TEC_LETTER_LOG" table="TC00_TEC_LETTER_LOG" readonly="false">
    <property name="cc03_id" column="CC03_ID" type="Long" tag-name="cc03_id" DB-column-type="NUMBER" DB-isWritable="true" DB-isAutoIncrement="false" column-type="NUMERIC" nullable="false" length="22" title="CC03_ID" iskey="true" default-value="" isSequence="false" find-by="true" order-by="cc03_id" web-service="true" />
    <property name="cc00_parameters" column="CC00_PARAMETERS" type="String" tag-name="cc00_parameters" DB-column-type="VARCHAR2" readonly="false" DB-isWritable="true" DB-isAutoIncrement="false" column-type="VARCHAR" nullable="true" length="2000" title="CC00_PARAMETERS" />
  </data-model>
  <data-model readonly="false" name="TC01_LETTER_TEMPLATE" tag-name="TC01_LETTER_TEMPLATE" table="TC01_LETTER_TEMPLATE" order="" web-service="true" accept-null="false" isEntity="false" withExecuteDate="false" isConfEntity="true">
    <property name="cc01_id" type="Long" column-type="NUMERIC" column="CC01_ID" title="CC01_ID" default-value="" tag-name="cc01_id" iskey="true" isSequence="true" find-by="true" order-by="cc01_id" web-service="true" />
    <property name="cc01_can_be_objected" type="String" column-type="VARCHAR" readonly="true" column="CC01_CAN_BE_OBJECTED" title="CC01_CAN_BE_OBJECTED" default-value="" tag-name="cc01_can_be_objected" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc01_confirm_receipt" type="String" column-type="CHAR" readonly="false" column="CC01_CONFIRM_RECEIPT" title="CC01_CONFIRM_RECEIPT" default-value="" tag-name="cc01_confirm_receipt" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc01_confirm_sending" type="String" column-type="CHAR" readonly="false" column="CC01_CONFIRM_SENDING" title="CC01_CONFIRM_SENDING" default-value="" tag-name="cc01_confirm_sending" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc01_digital_signature" type="String" column-type="CHAR" readonly="false" column="CC01_DIGITAL_SIGNATURE" title="CC01_DIGITAL_SIGNATURE" default-value="" tag-name="cc01_digital_signature" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc01_latest_version" type="Long" column-type="NUMERIC" column="CC01_LATEST_VERSION" title="cc01_latest_version" default-value="" tag-name="cc01_latest_version" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc01_need_reply" type="String" column-type="CHAR" readonly="false" column="CC01_NEED_REPLY" title="CC01_NEED_REPLY" default-value="" tag-name="cc01_need_reply" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc01_print_by_tps" type="String" column-type="CHAR" readonly="false" column="CC01_PRINT_BY_TPS" title="CC01_PRINT_BY_TPS" default-value="" tag-name="cc01_print_by_tps" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc01_publish_in_gazette" type="String" column-type="CHAR" readonly="false" column="CC01_PUBLISH_IN_GAZETTE" title="CC01_PUBLISH_IN_GAZETTE" default-value="" tag-name="cc01_publish_in_gazette" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc01_report_file_name" type="String" column-type="VARCHAR" readonly="false" column="CC01_REPORT_FILE_NAME" title="CC01_REPORT_FILE_NAME" default-value="" tag-name="cc01_report_file_name" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cstd_letter_type" type="String" column-type="VARCHAR" readonly="false" column="CSTD_LETTER_TYPE" title="CSTD_LETTER_TYPE" default-value="" tag-name="cstd_letter_type" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cstd_reply_days" type="String" column-type="VARCHAR" readonly="false" column="CSTD_REPLY_DAYS" title="CSTD_REPLY_DAYS" default-value="" tag-name="cstd_reply_days" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <raw-find-entry name="getLatestId" cascade="false" web-service="true" description="Get the latest id of TC01_LETTER_TEMPLATE">SELECT cc01_id, cc01_confirm_receipt, cc01_confirm_sending, cstd_letter_type, cc01_need_reply, cstd_reply_days, cc01_report_file_name 
from tc01_letter_template
where cc01_id=(select max(cc01_id) from tc01_letter_template)</raw-find-entry>
    <raw-find-entry name="getLatestVersion" cascade="false" web-service="true">SELECT cc01_id, cc01_confirm_receipt, cc01_confirm_sending, cstd_letter_type, cc01_need_reply, cstd_reply_days, cc01_report_file_name 
from tc01_letter_template
where  cc01_id=#TO:String#</raw-find-entry>
    <raw-find-entry name="getLetterTypeByLetterID" cascade="false" web-service="true">SELECT  a.cstd_letter_type
from  tc01_letter_template a,tc03_letter b 
where a.cc01_id=b.cc01_id
  and b.cc03_id=#letterID#</raw-find-entry>
    <raw-find-entry name="getTemplateByInternalId" cascade="false" web-service="true">select tc01.cstd_letter_type from tc01_letter_template tc01,tc03_letter tc03
where tc03.cc01_id = tc01.cc01_id
and tc03.cr01_internal_id = #InternalId#
and tc03.cstd_status != 'LTR_NDEL'
and tc03.cc03_delivered_on is not null</raw-find-entry>
    <raw-find-entry name="getTemplateByLetterID" cascade="false" web-service="true">SELECT a.cc01_id, a.cc01_confirm_receipt, a.cc01_confirm_sending, a.cstd_letter_type, a.cc01_need_reply, a.cstd_reply_days, a.cc01_report_file_name 
from  tc01_letter_template a,tc03_letter b 
where a.cc01_id=b.cc01_id
  and b.cc03_id=#letterID#</raw-find-entry>
    <raw-find-entry name="getTemplateByPK" cascade="false" web-service="true">SELECT cc01_id, cc01_confirm_receipt, cc01_confirm_sending, cstd_letter_type, cc01_need_reply, cstd_reply_days, cc01_report_file_name
 from  tc01_letter_template where cc01_id=#id#</raw-find-entry>
  </data-model>
  <data-model readonly="false" name="TC03_LETTER" tag-name="TC03_LETTER" table="TC03_LETTER" order="" web-service="true" accept-null="false" isEntity="true" isAudit="true" isVersionControl="true" entityCode="LTR" withExecuteDate="false" hasAttachDocs="true">
    <property name="cc03_id" type="Long" column-type="NUMERIC" column="CC03_ID" title="CC03_ID" default-value="" tag-name="cc03_id" iskey="true" isSequence="true" find-by="true" order-by="cc03_id" web-service="true" isAudit="true" />
    <property name="ca09_tax_type_code" type="String" column-type="VARCHAR" readonly="false" column="CA09_TAX_TYPE_CODE" title="CA09_TAX_TYPE_CODE" default-value="" tag-name="ca09_tax_type_code" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc01_id" type="Long" column-type="NUMERIC" readonly="false" column="CC01_ID" title="CC01_ID" default-value="" tag-name="cc01_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_agreement_date" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_AGREEMENT_DATE" title="CC03_AGREEMENT_DATE" default-value="" tag-name="cc03_agreement_date" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="Sent_on_entry" type="Timestamp" column-type="TIMESTAMP" readonly="true" column="" title="" default-value="" tag-name="Sent_on_entry" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="attorneyName" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="attorneyName" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="ca02_return_id" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="ca02_return_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="ca02_return_version" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="ca02_return_version" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc03_attorney_agreement" type="String" column-type="VARCHAR" readonly="false" column="CC03_ATTORNEY_AGREEMENT" title="CC03_ATTORNEY_AGREEMENT" default-value="" tag-name="cc03_attorney_agreement" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="cc03_attorney_agreement" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc03_attorney_id" type="Long" column-type="NUMERIC" readonly="false" column="CC03_ATTORNEY_ID" title="CC03_ATTORNEY_ID" default-value="" tag-name="cc03_attorney_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="cc03_attorney_id" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc03_case_reference" type="String" column-type="VARCHAR" readonly="false" column="CC03_CASE_REFERENCE" title="CC03_CASE_REFERENCE" default-value="" tag-name="cc03_case_reference" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_create_on" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_CREATE_ON" title="CC03_CREATE_ON" default-value="" tag-name="cc03_create_on" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_date_not_delivered" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_DATE_NOT_DELIVERED" title="CC03_DATE_NOT_DELIVERED" default-value="" tag-name="cc03_date_not_delivered" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_date_printed" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_DATE_PRINTED" title="CC03_DATE_PRINTED" default-value="" tag-name="cc03_date_printed" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_deliver_homeaddr" type="String" column-type="CHAR" readonly="false" column="CC03_DELIVER_HOMEADDR" title="CC03_DELIVER_HOMEADDR" default-value="" tag-name="cc03_deliver_homeaddr" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_delivered_on" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_DELIVERED_ON" title="CC03_DELIVERED_ON" default-value="" tag-name="cc03_delivered_on" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_entity_id" type="String" column-type="NVARCHAR" readonly="false" column="CC03_ENTITY_ID" title="CC03_ENTITY_ID" default-value="" tag-name="cc03_entity_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_entity_udk" type="String" column-type="NVARCHAR" readonly="false" column="CC03_ENTITY_UDK" title="CC03_ENTITY_UDK" default-value="" tag-name="cc03_entity_udk" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_envent_trig" type="String" column-type="CHAR" readonly="false" column="CC03_ENVENT_TRIG" title="CC03_ENVENT_TRIG" default-value="" tag-name="cc03_envent_trig" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_event_due" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_EVENT_DUE" title="CC03_EVENT_DUE" default-value="" tag-name="cc03_event_due" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_filing_period" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_FILING_PERIOD" title="CC03_FILING_PERIOD" default-value="" tag-name="cc03_filing_period" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_internal_id_3_party" type="Long" column-type="NUMERIC" readonly="false" column="CR01_INTERNAL_ID_3_PARTY" title="CR01_INTERNAL_ID_3_PARTY" default-value="" tag-name="cc03_internal_id_3_party" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_letter_to_3_party" type="String" column-type="CHAR" readonly="false" column="CC03_LETTER_TO_3_PARTY" title="CC03_LETTER_TO_3_PARTY" default-value="" tag-name="cc03_letter_to_3_party" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_next_envent" type="String" column-type="VARCHAR" readonly="false" column="CC03_NEXT_ENVENT" title="CC03_NEXT_ENVENT" default-value="" tag-name="cc03_next_envent" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_payment_period" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_PAYMENT_PERIOD" title="CC03_PAYMENT_PERIOD" default-value="" tag-name="cc03_payment_period" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_print_count" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_PRINT_COUNT" title="CC03_PRINT_COUNT" default-value="" tag-name="cc03_print_count" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_print_office" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_PRINT_OFFICE" title="CC03_PRINT_OFFICE" default-value="" tag-name="cc03_print_office" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false">
      <filter name="filter1">
        <business />
        <business-expression>flexrule:String officeId;&#xD;
			    Number numInd := GetBox("cc03_print_office");&#xD;
			    officeId := ToString(numInd);&#xD;
			    Log("debug","get OfficeID: " + officeId);  &#xD;
			    return officeId;</business-expression>
      </filter>
    </property>
    <property name="cc03_print_officer" type="String" column-type="VARCHAR" readonly="false" column="CC03_PRINT_OFFICER" title="CC03_PRINT_OFFICER" default-value="" tag-name="cc03_print_officer" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_publish_in_gazette" type="String" column-type="CHAR" readonly="false" column="CC03_PUBLISH_IN_GAZETTE" title="CC03_PUBLISH_IN_GAZETTE" default-value="" tag-name="cc03_publish_in_gazette" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_received_on" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_RECEIVED_ON" title="CC03_RECEIVED_ON" default-value="" tag-name="cc03_received_on" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_reply_due" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_REPLY_DUE" title="CC03_REPLY_DUE" default-value="" tag-name="cc03_reply_due" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_reply_incoming_num" type="String" column-type="VARCHAR" readonly="false" column="CC03_REPLY_INCOMING_NUM" title="CC03_REPLY_INCOMING_NUM" default-value="" tag-name="cc03_reply_incoming_num" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_reply_office" type="String" column-type="CHAR" readonly="false" column="CC03_REPLY_OFFICE" title="CC03_REPLY_OFFICE" default-value="" tag-name="cc03_reply_office" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_reply_taxpayer_ref" type="String" column-type="VARCHAR" readonly="false" column="CC03_REPLY_TAXPAYER_REF" title="CC03_REPLY_TAXPAYER_REF" default-value="" tag-name="cc03_reply_taxpayer_ref" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_representative_name" type="String" column-type="VARCHAR" readonly="false" column="CC03_REPRESENTATIVE_NAME" title="CC03_REPRESENTATIVE_NAME" default-value="" tag-name="cc03_representative_name" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc03_seizure_due_flag" type="String" column-type="CHAR" readonly="false" column="CC03_SEIZURE_DUE_FLAG" title="CC03_SEIZURE_DUE_FLAG" default-value="" tag-name="cc03_seizure_due_flag" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_sent_on" type="Timestamp" column-type="TIMESTAMP" readonly="false" column="CC03_SENT_ON" title="CC03_SENT_ON" default-value="" tag-name="cc03_sent_on" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cc03_tracking_number" type="String" column-type="VARCHAR" readonly="false" column="CC03_TRACKING_NUMBER" title="CC03_TRACKING_NUMBER" default-value="" tag-name="cc03_tracking_number" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cc03_version" type="Long" column-type="NUMERIC" readonly="false" column="CC03_VERSION" title="CC03_VERSION" default-value="" tag-name="cc03_version" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cc03_year" type="Integer" column-type="NUMERIC" readonly="false" column="CC03_YEAR" title="CC03_YEAR" default-value="" tag-name="cc03_year" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cr01_internal_id" type="Long" column-type="NUMERIC" readonly="false" column="CR01_INTERNAL_ID" title="CR01_INTERNAL_ID" default-value="" tag-name="cr01_internal_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false">
      <filter name="filter2">
        <business-expression><![CDATA[flexrule:
					String securityLevelId;
			    Number numInd := GetBox("cr01_internal_id");
			    String ind := ToString(numInd);
			    Log("debug","get cr01_internal_id value: " + ind);  
			    List paraList;
			    Add(paraList, ind);        
			    securityLevelId := Call("getSecurityLevel", paraList);
			    Log("debug","getSecurityLevel from IND: " + securityLevelId);
					return securityLevelId;]]></business-expression>
      </filter>
    </property>
    <property name="cr03_branch_code" type="String" column-type="VARCHAR" readonly="false" column="CR03_BRANCH_CODE" title="CR03_BRANCH_CODE" default-value="" tag-name="cr03_branch_code" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="co01_request_no" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="co01_request_no" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cr07_fin" type="String" column-type="NVARCHAR" readonly="false" column="CR07_FIN" title="CR07_FIN" default-value="" tag-name="cr07_fin" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cs10_id" type="String" column-type="NVARCHAR" readonly="false" column="CS10_ID" title="CS10_ID" default-value="" tag-name="cs10_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cstd_correspondence" type="String" column-type="VARCHAR" readonly="false" column="CSTD_CORRESPONDENCE" title="CSTD_CORRESPONDENCE" default-value="" tag-name="cstd_correspondence" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" />
    <property name="cstd_case_nature" type="String" column-type="VARCHAR" readonly="true" column="" title="cstd_case_nature" default-value="" tag-name="cstd_case_nature" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cstd_entity" type="String" column-type="NVARCHAR" readonly="false" column="CSTD_ENTITY" title="CSTD_ENTITY" default-value="" tag-name="cstd_entity" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cstd_letter_type" type="String" column-type="VARCHAR" readonly="false" column="CSTD_LETTER_TYPE" title="cstd_letter_type" default-value="" tag-name="cstd_letter_type" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false">
      <filter name="filter3">
        <business />
        <business-expression>flexrule:String letterType := GetBox("cstd_letter_type");
return letterType;</business-expression>
      </filter>
    </property>
    <property name="cstd_nature_3_party" type="String" column-type="VARCHAR" readonly="false" column="CSTD_NATURE_3_PARTY" title="CSTD_NATURE_3_PARTY" default-value="" tag-name="cstd_nature_3_party" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="true" isSensitive="false" />
    <property name="cstd_request_ref_type" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="cstd_request_ref_type" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cstd_status" type="String" column-type="VARCHAR" readonly="false" column="CSTD_STATUS" title="CSTD_STATUS" default-value="" tag-name="cstd_status" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isStatus="true" isAudit="true" />
    <property name="cstd_request_type" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="cstd_request_type" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="cstd_wrgtin_outcome" type="String" column-type="VARCHAR" readonly="true" column="" title="cstd_wrgtin_outcome" default-value="" tag-name="cstd_wrgtin_outcome" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="ct01_transaction_id" type="String" column-type="NUMERIC" readonly="true" column="" title="" default-value="" tag-name="ct01_transaction_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="ff_concurrencycontrol" tag-name="ff_concurrencycontrol" title="FF_CONCURRENCYCONTROL" order-by="ff_concurrencycontrol" column="FF_CONCURRENCYCONTROL" type="Long" DB-column-type="NUMERIC" column-type="NUMERIC" nullable="true" length="18" />
    <property name="ftnDelivered" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="ftnDelivered" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="lastLetterId" type="Long" column-type="NUMERIC" readonly="true" column="" title="" default-value="" tag-name="lastLetterId" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="letterUrl" type="String" column-type="VARCHAR" readonly="true" column="" title="letterUrl" default-value="" tag-name="letterUrl" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="rptName" type="String" column-type="VARCHAR" readonly="true" column="" title="rptName" default-value="" tag-name="rptName" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="select" type="String" column-type="VARCHAR" readonly="true" column="" title="SELECT" default-value="" tag-name="select" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <property name="tin" type="String" column-type="VARCHAR" readonly="true" column="" title="tin" default-value="" tag-name="tin" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="totalUnpaid" type="BigDecimal" column-type="DOUBLE" readonly="true" column="" title="" default-value="" tag-name="totalUnpaid" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" isSensitive="false" />
    <find-entry name="searchDataForRunFtnBatch" cascade="false" web-service="true">cc03_event_due &lt;=#businessDate:Date# AND 
    cc03_envent_trig = 'N' AND CC03_NEXT_ENVENT!='LTR_ENDUE' AND  CC03_NEXT_ENVENT!='LTR_ENDUESYNC'</find-entry>
    <find-entry name="searchFTNLetterByCondition" cascade="false" web-service="true">cr01_internal_id =#internalId:Long#
AND cstd_entity=#entity:String# 
AND cc03_entity_id=#entityId:String#
AND cstd_letter_type IN ($letterType$)</find-entry>
    <find-entry name="searchLetterByEntityAndEntityId" cascade="false" web-service="true">cc01_Id In(select cc01_Id from tc01_letter_template where cstd_letter_type in($letterType$)) and cc03_entity_id in($entityIds$) and CSTD_ENTITY=#entity:String# order by case when #entity:String# = 'RET' then to_number(substr(cc03_entity_id, instr(cc03_entity_id, '-') + 1, length(cc03_entity_id))) else cc03_id end desc</find-entry>
    <raw-find-entry name="FindLetterBaseInfoByID" cascade="false" web-service="true">Select 
	tc.CC03_ID
      ,	tc.CR01_INTERNAL_ID
      ,	tc.CR03_BRANCH_CODE
      ,	tc.CA09_TAX_TYPE_CODE 
      ,	tc.CC03_YEAR 
      ,	tc.CC03_ENTITY_ID 
      ,	tc.CC03_FILING_PERIOD 
      ,	tc.CC03_CREATE_ON 
      ,	tc.CC03_DELIVERED_ON
      , txp.TIN tin,	(SELECT MAX (itc.CC03_ID) FROM TC03_LETTER itc WHERE EXISTS (SELECT 1 FROM TC01_LETTER_TEMPLATE ilt WHERE ilt.CC01_ID = itc.CC01_ID AND ilt.CC01_CAN_BE_OBJECTED = 'Y') AND itc.CR01_INTERNAL_ID = tc.CR01_INTERNAL_ID AND itc.CA09_TAX_TYPE_CODE = tc.CA09_TAX_TYPE_CODE AND SUBSTR(itc.CC03_ENTITY_ID , 0 , INSTR(itc.CC03_ENTITY_ID , '-')-1 ) = SUBSTR(tc.CC03_ENTITY_ID , 0 , INSTR(tc.CC03_ENTITY_ID , '-')-1 ) AND itc.CR03_BRANCH_CODE = tc.CR03_BRANCH_CODE AND itc.CC03_YEAR = tc.CC03_YEAR AND itc.CC03_FILING_PERIOD = tc.CC03_FILING_PERIOD AND itc.CC03_ID &gt; tc.CC03_ID) lastLetterId
From TC03_LETTER tc , 
  REG.TAXPAYER  txp 

where   tc.CR01_INTERNAL_ID = txp.INTERNAL_ID AND  tc.CC03_ID =  #recordEnd:Long# AND Exists( Select 1 From TC01_LETTER_TEMPLATE lt where lt.CC01_ID = tc.CC01_ID AND lt.CC01_CAN_BE_OBJECTED = 'Y' )</raw-find-entry>
    <raw-find-entry name="checkTaxDueByReturnVersion" cascade="false" web-service="true">SELECT sum(UNPAID_AMT)     as   totalUnpaid, '' as cc03_id 
  from (SELECT AMOUNT                  AS UNPAID_AMT
          FROM (SELECT SUM(AMOUNT) AMOUNT
                  FROM (
                  SELECT CASE
                    WHEN tt01.CSTD_DC = 'CT' THEN
                     0 - tt01.CT01_AMOUNT
                    ELSE
                     tt01.CT01_AMOUNT
                  END AMOUNT
              FROM TT01_TRANSACTIONS tt01, tax_returns ta02
              WHERE tt01.CT01_REVERSED_FLAG = 'N'
              and tt01.ct01_cleared_flag = 'Y'
              and tt01.ct01_value_date &lt;= sysdate 
			  and tt01.CT01_FINALIZED_FLAG = 'Y' 
			  and tt01.CSTD_LIABILITY_TYPE &lt;&gt; 'RET186N2' 
              and tt01.cr01_internal_id = ta02.cr01_internal_id
              and tt01.cr03_branch_code = ta02.cr03_branch_code
              and tt01.cstd_tax_type = #taxType:String# 
              and tt01.ct01_tax_year = ta02.ca02_tax_year
              and tt01.ct01_period = ta02.ca02_tax_period
              and ta02.ca02_return_id = #returnId:String# 
              and ta02.ca02_return_version = #returnVersion:String# 
              
              union all
              
              SELECT CASE
                    WHEN tt01.CSTD_DC = 'CT' THEN
                     0 - tt01.CT01_AMOUNT
                    ELSE
                     tt01.CT01_AMOUNT
                  END AMOUNT
              FROM TT01_TRANSACTIONS tt01
              WHERE tt01.CT01_REVERSED_FLAG = 'N'
              and tt01.ct01_cleared_flag = 'Y'
              and tt01.ct01_value_date &lt;= sysdate 
			  and tt01.CT01_FINALIZED_FLAG = 'Y' 
			  and tt01.CSTD_LIABILITY_TYPE &lt;&gt; 'RET186N2'  
              and tt01.cstd_allocated_entity = 'RET'
              and tt01.ct01_allocated_entityid = #returnId:String#   
                         ) TAB1
                 ) TAB
         WHERE TAB.AMOUNT &gt; 0) unpaid</raw-find-entry>
    <raw-find-entry name="checkTransactionBalance" cascade="false" web-service="true">select totalUnpaid, cc03_Id FROM (  
SELECT Amount AS totalUnpaid,'' AS cc03_Id FROM
     (SELECT SUM(Amt) AMOUNT
      FROM
    (SELECT
      CASE
        WHEN tt01.CSTD_DC = 'CT'
        THEN 0 - tt01.CT01_AMOUNT
        ELSE tt01.CT01_AMOUNT
      END Amt
    FROM TT01_TRANSACTIONS tt01
    WHERE tt01.CT01_REVERSED_FLAG = 'N'
    AND tt01.ct01_cleared_flag    = 'Y'
    AND Tt01.Ct01_Value_Date    &lt;= Sysdate
    And Tt01.Cr01_Internal_Id = #internalId:Long#
    and tt01.cr03_branch_code = #branch:String#
    and tt01.cstd_tax_type = #taxType:String#
    ) Tab
  ) WHERE AMOUNT &gt;0)</raw-find-entry>
    <raw-find-entry name="checkTransactionBalanceByReturn" cascade="false" web-service="true">SELECT sum(UNPAID_AMT)     as   totalUnpaid, '' as cc03_id 
  from (SELECT AMOUNT                  AS UNPAID_AMT
          FROM (SELECT SUM(AMOUNT) AMOUNT
                  FROM (
                  SELECT CASE
                    WHEN tt01.CSTD_DC = 'CT' THEN
                     0 - tt01.CT01_AMOUNT
                    ELSE
                     tt01.CT01_AMOUNT
                  END AMOUNT
              FROM TT01_TRANSACTIONS tt01, tax_returns ta02
              WHERE tt01.CT01_REVERSED_FLAG = 'N'
              and tt01.ct01_cleared_flag = 'Y'
              and tt01.ct01_value_date &lt;= sysdate
              and tt01.cr01_internal_id = ta02.cr01_internal_id
              and tt01.cr03_branch_code = ta02.cr03_branch_code
              and tt01.cstd_tax_type = #taxType:String# 
              and tt01.ct01_tax_year = ta02.ca02_tax_year
              and tt01.ct01_period = ta02.ca02_tax_period
              and ta02.ca02_return_id = #returnId:String# 
              and ta02.ca02_return_version = #returnVersion:String# 

              union all
              
              SELECT CASE
                    WHEN tt01.CSTD_DC = 'CT' THEN
                     0 - tt01.CT01_AMOUNT
                    ELSE
                     tt01.CT01_AMOUNT
                  END AMOUNT
              FROM TT01_TRANSACTIONS tt01
              WHERE tt01.CT01_REVERSED_FLAG = 'N'
              and tt01.ct01_cleared_flag = 'Y'
              and tt01.ct01_value_date &lt;= sysdate
              and tt01.cstd_allocated_entity = 'RET'
              and tt01.ct01_allocated_entityid = #returnId:String#              
                         ) TAB1
                 ) TAB
         WHERE TAB.AMOUNT &gt; 0) unpaid</raw-find-entry>
    <raw-find-entry name="checkifFTNAlreadygenerated" cascade="false" web-service="true">Select 1 from dual
Where 
Exists(Select 1 from STL.TC03_LETTER Where Cc03_id=#Cc03_id:String# and CC03_ENVENT_TRIG='Y') or
Exists
(Select 1 from STL.TC03_LETTER Where CC01_ID in (Select CC01_ID from STL.TC01_LETTER_TEMPLATE Where CC01_REPORT_FILE_NAME like '%FinalTax%')
and CC03_ENTITY_ID=#CC03_ENTITY_ID:String# and CC03_YEAR=#CC03_YEAR:String# and CC03_FILING_PERIOD=#CC03_FILING_PERIOD:String#
and CA09_TAX_TYPE_CODE=#CA09_TAX_TYPE_CODE:String# and CR01_INTERNAL_ID=#CR01_INTERNAL_ID:String#)</raw-find-entry>
    <raw-find-entry name="findCreatedByList" cascade="false" web-service="true">select distinct cs10_id from tc03_letter</raw-find-entry>
    <raw-find-entry name="findLetterInfoBaseOnPrevNo" cascade="false" web-service="true">Select l.CC03_ID, l.CC03_DELIVERED_ON, l.CC03_CREATE_ON
From TO07_REQUEST_RULING  rr, TC03_LETTER   l
where rr.CC03_ID_RULING_LETTER  = l.CC03_ID AND rr.CO01_REQUEST_NO=#prevNo:Long#</raw-find-entry>
    <raw-find-entry name="findPrintingOfficerList" cascade="false" web-service="true">select distinct cc03_print_officer from tc03_letter</raw-find-entry>
    <raw-find-entry name="getANLetterForFTN" cascade="false" web-service="true">SELECT tc03.cc03_id, tc03.cc01_id, tc03.cstd_letter_type, tc03.CC03_ENTITY_ID, tc03.CS10_ID
from TC03_LETTER tc03 
where tc03.cstd_entity = 'RET'
and tc03.cc03_entity_id = #entityId:String#
and tc03.cc03_next_envent = 'LTR_FTNDUE'
and tc03.cc03_envent_trig = 'Y'
and tc03.CSTD_LETTER_TYPE in ($letterTypes$)</raw-find-entry>
    <raw-find-entry name="getConfirmSendingLetter" cascade="false" web-service="true">SELECT cc03_id, ca09_tax_type_code, cc01_id, cc03_case_reference, cc03_filing_period, cc03_payment_period, cc03_reply_incoming_num, cc03_reply_taxpayer_ref, cc03_sent_on, cc03_year, cr01_internal_id, cr03_branch_code, cs10_id, cstd_correspondence, cstd_status,cc03_reply_due,cc03_delivered_on,cc03_print_office  from  tc03_letter where cc03_id=#letterId:String# and cstd_status='LTR_CREA'</raw-find-entry>
    <raw-find-entry name="getFailedLetters" cascade="false" web-service="true">SELECT tc03.cc03_id, tc03.cc01_id, tc03.cstd_letter_type, tc03.CC03_ENTITY_ID, tc03.CS10_ID
from TC03_LETTER tc03 
where tc03.cc03_id not in (select tc04.cc03_id from TC04_LETTER_CONTENT tc04) 
and tc03.CSTD_LETTER_TYPE in ($letterTypes$) and tc03.cc03_entity_id is not null</raw-find-entry>
    <raw-find-entry name="getLetterByCondition" cascade="false" web-service="true">select CC03_ID,
CA09_TAX_TYPE_CODE,
CC01_ID,
CC03_CASE_REFERENCE,
CC03_FILING_PERIOD,
CC03_PAYMENT_PERIOD,
CC03_REPLY_INCOMING_NUM,
CC03_REPLY_TAXPAYER_REF,
CC03_SENT_ON,
CC03_YEAR,
CR01_INTERNAL_ID,
CR03_BRANCH_CODE,
CS10_ID,
CSTD_CORRESPONDENCE,
CSTD_STATUS,
CC03_REPLY_DUE,
CC03_DELIVERED_ON,
FF_CONCURRENCYCONTROL, 
cc03_print_office   
 FROM ( 
SELECT t3.cc03_id, t3.ca09_tax_type_code, t3.cc01_id, t3.cc03_case_reference, t3.cc03_filing_period, t3.cc03_payment_period, t3.cc03_reply_incoming_num, t3.cc03_reply_taxpayer_ref, t3.cc03_sent_on, t3.cc03_year, t3.cr01_internal_id, t3.cr03_branch_code, t3.cs10_id, t3.cstd_correspondence, t3.cstd_status, t3.cc03_reply_due ,t3.cc03_delivered_on,t3.FF_CONCURRENCYCONTROL, t3.cc03_print_office    
from tc01_letter_template t1
inner join tc03_letter t3
on t1.cc01_id=t3.cc01_id 
where t1.cc01_need_reply=#need_reply:String#
and (t3.cc03_sent_on&gt;=#from:Date# 
and t3.cc03_sent_on&lt;=#to:Date# or t3.cc03_sent_on is null)
)  TC03_LETTER WHERE 1=1</raw-find-entry>
    <raw-find-entry name="getLetterByEntityAndEntityidAndLetterType" cascade="false" web-service="true">SELECT cc03_id,cr01_internal_id,tc01.cstd_letter_type,cr03_branch_code,ca09_tax_type_code,cc03_year,cc03_filing_period,cc03_next_envent,tc03.cc01_id,tc03.cstd_entity, cs10_id,cc03_tracking_number,cc03_sent_on, cc03_seizure_due_flag,cstd_status,cc03_received_on,cc03_reply_due,cc03_print_office, cc03_print_officer,cc03_print_count,cc03_payment_period,cc03_delivered_on, cc03_entity_id, cc03_entity_udk,cc03_envent_trig,cc03_agreement_date,cc03_create_on,cc03_date_printed, cc03_reply_office from  TC03_LETTER tc03 ,TC01_LETTER_TEMPLATE tc01 
where 
tc03.cc01_id = tc01.cc01_id and 
tc03.CR01_INTERNAL_ID=#internalId:Long# and 
tc03.cc03_entity_id=#entityid:String# and 
tc03.cstd_entity=#entity:String#  and 
tc01.CSTD_LETTER_TYPE in ($letterTypes$) order by cc03_ID DESC</raw-find-entry>
    <raw-find-entry name="getLetterById" cascade="false" web-service="true">SELECT cc03_id, ca09_tax_type_code, cc01_id, cc03_case_reference, cc03_filing_period, cc03_payment_period, cc03_reply_incoming_num, cc03_reply_taxpayer_ref, cc03_sent_on, cc03_year, cr01_internal_id, cr03_branch_code, cs10_id, cstd_correspondence, cstd_status,cc03_reply_due, cc03_delivered_on,FF_CONCURRENCYCONTROL,cc03_print_office  
from  tc03_letter where cc03_id=#letterId:String#</raw-find-entry>
    <raw-find-entry name="getLetterIDbyInternalIDANDLetterType" cascade="false" web-service="true">SELECT cc03_id from  TC03_LETTER where  CR01_INTERNAL_ID=#internalId#
and (CSTD_LETTER_TYPE='LTR_AC49' or CSTD_LETTER_TYPE='LTR_AC48')
and CC03_CREATE_ON=(Select max(CC03_CREATE_ON)  from  TC03_LETTER where  CR01_INTERNAL_ID=#internalId#
and (CSTD_LETTER_TYPE='LTR_AC49' or CSTD_LETTER_TYPE='LTR_AC48') )</raw-find-entry>
    <raw-find-entry name="getLettersByConditions" cascade="false" web-service="true">SELECT cc03_id,cr01_internal_id,tc01.cstd_letter_type,cr03_branch_code,ca09_tax_type_code,cc03_year,cc03_filing_period,cc03_next_envent,tc03.cc01_id,tc03.cstd_entity, cs10_id,cc03_tracking_number,cc03_sent_on, cc03_seizure_due_flag,cstd_status,cc03_received_on,cc03_reply_due,cc03_print_office, cc03_print_officer,cc03_print_count,cc03_payment_period,cc03_delivered_on, cc03_entity_id, cc03_entity_udk,cc03_envent_trig,cc03_agreement_date,cc03_create_on,cc03_date_printed, cc03_reply_office from  tc03_letter tc03 ,TC01_LETTER_TEMPLATE tc01 where tc03.cc01_id = tc01.cc01_id and tc03.CR01_INTERNAL_ID=#internalId:Long# and tc03.CR03_BRANCH_CODE=#branch:String# and tc03.CA09_TAX_TYPE_CODE=#taxType:String# and tc03.CC03_YEAR=#taxYear:Integer# and tc03.CC03_FILING_PERIOD=#period:Integer# and tc01.CSTD_LETTER_TYPE in($letterTypes$) order by cc03_ID DESC</raw-find-entry>
    <raw-find-entry name="getLettersByStatusAndReply_due" cascade="false" web-service="true">SELECT cc03_id, ca09_tax_type_code, cc01_id, cc03_case_reference, cc03_filing_period, cc03_payment_period, cc03_reply_due, cc03_reply_incoming_num, cc03_reply_taxpayer_ref, cc03_sent_on, cc03_year, cr01_internal_id, cr03_branch_code, cs10_id, cstd_correspondence, cstd_status ,cc03_delivered_on,FF_CONCURRENCYCONTROL,cc03_print_office, cstd_letter_type 
from  TC03_LETTER
where cstd_status =#letterId:String#  and cc03_reply_due &lt;= #nowDay:Date# and rownum &lt; 2</raw-find-entry>
    <raw-find-entry name="getMaxCc03ID" cascade="false" web-service="true">SELECT max(cc03_id),null ca09_tax_type_code,null cc01_id,null cc03_case_reference,null cc03_filing_period,null cc03_payment_period,null cc03_reply_incoming_num,null cc03_reply_taxpayer_ref,null cc03_sent_on,null cc03_year,null cr01_internal_id,null cr03_branch_code,null cs10_id,null cstd_correspondence,null cstd_status, null cc03_reply_due, null cc03_delivered_on, null cc03_print_office, null FF_CONCURRENCYCONTROL
from  tc03_letter</raw-find-entry>
    <raw-find-entry name="searchDataForRunFtnBatch_filteroffice" cascade="false" web-service="true">Select CC03_ID ,
CC01_ID ,
CS10_ID ,
CSTD_CORRESPONDENCE ,
CR01_INTERNAL_ID ,
CR03_BRANCH_CODE ,
CA09_TAX_TYPE_CODE ,
CC03_YEAR ,
CC03_FILING_PERIOD ,
CC03_PAYMENT_PERIOD ,
CSTD_STATUS ,
CC03_CASE_REFERENCE ,
CC03_SENT_ON ,
CC03_REPLY_DUE ,
CC03_REPLY_INCOMING_NUM ,
CC03_REPLY_TAXPAYER_REF ,
CC03_RECEIVED_ON ,
CC03_DELIVERED_ON ,
CC03_CREATE_ON ,
CC03_DELIVER_HOMEADDR ,
CC03_REPLY_OFFICE ,
FF_CONCURRENCYCONTROL ,
CSTD_ENTITY ,
CC03_ENTITY_ID ,
CC03_SEIZURE_DUE_FLAG ,
CC03_EVENT_DUE ,
CC03_NEXT_ENVENT ,
CC03_ENVENT_TRIG ,
CC03_PRINT_OFFICER ,
CC03_PRINT_OFFICE ,
CC03_PRINT_COUNT ,
CC03_LETTER_TO_3_PARTY ,
CSTD_NATURE_3_PARTY ,
CR01_INTERNAL_ID_3_PARTY ,
CC03_DATE_PRINTED ,
CC03_TRACKING_NUMBER ,
CC03_DATE_NOT_DELIVERED ,
CC03_PUBLISH_IN_GAZETTE ,
CSTD_LETTER_TYPE ,
CC03_ATTORNEY_AGREEMENT ,
CC03_ATTORNEY_ID ,
CC03_REPRESENTATIVE_NAME ,
CC03_AGREEMENT_DATE ,
CC03_ENTITY_UDK ,
CR07_FIN ,
CC03_VERSION  from TC03_LETTER 
Where
 cc03_event_due&lt;=#businessDate:Date# AND 
 CC03_NEXT_ENVENT!='LTR_ENDUE' AND    CC03_NEXT_ENVENT!='LTR_ENDUESYNC' AND
    cc03_envent_trig = 'N' AND
    cr01_internal_id in 
    (Select cr01_internal_id From REG.TR16_TAXPAYER_OFFICE Where cs04_id in
        (Select cs04_id_child From ADM.TS07_OFFICE_RELATIONSHIP where cs04_id_parent in 
        (Select cs04_id_child From ADM.TS07_OFFICE_RELATIONSHIP where cs04_id_parent=#officeid:String#)))</raw-find-entry>
    <raw-find-entry name="searchDataForRunFtnBatch_old" cascade="false" web-service="true">SELECT cc03_id FROM tc03_letter
    Where  cc03_event_due &lt;=#businessDate:Date# AND 
    cc03_envent_trig = 'N'</raw-find-entry>
    <raw-find-entry name="searchLetters" cascade="false" web-service="true" isSortedEntry="true">select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TC03_LETTER.TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
       CC03_ENTITY_UDK,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc 
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
			   t3.cstd_status,
			   t3.cc03_entity_udk,
			   t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#)
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#)
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#)
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (#internal_id:String# is null or t3.cr01_internal_id = #internal_id:String#)
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#)
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%'))) 
        and (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
        and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
		and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#)
		and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID 
         ) TC03_LETTER 
		 where 1=1</raw-find-entry>
    <raw-find-entry name="searchLettersForTPS" cascade="false" web-service="true" isSortedEntry="true">select  /*+ FIRST_ROWS */  CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc     
 FROM ( 
 select  CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc     
 FROM ( 
select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TC03_LETTER.TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc,  
	   ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ        
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cstd_status,
			   t3.cc03_entity_udk, 
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
	           t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#)
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#)
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#)
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (#internal_id:String# is null or t3.cr01_internal_id = #internal_id:String#)
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#) 
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%'))) 
        and (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
		and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
		and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#)
		and #paraSessionOfficeID:String# = t3.cc03_print_office
       ) TC03_LETTER  ) 
	   where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer# )</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTD" cascade="false" web-service="true" isSortedEntry="true">select /*+ index(t3,IDX_TC03_CR01_ID_CR03_BRANCH) */  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc,
               ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ  
from (
        SELECT  t3.cc03_id,
                   t3.ca09_tax_type_code,
                   t3.cc01_id,
                   t1.cstd_letter_type cstd_letter_type,
                   t3.cc03_case_reference,
                   t3.cc03_filing_period,
                   t3.cc03_payment_period,
                   t3.cc03_reply_incoming_num,
                   t3.cc03_reply_taxpayer_ref,
                   t3.cc03_sent_on,
                   t3.cc03_year,
                   cr01_internal_id,
                   taxpayer.TIN,
                   t3.cr03_branch_code,
                   t3.cs10_id,
                   t3.cstd_correspondence,
                   t3.cstd_status,
                   t3.cc03_entity_udk,
                   t3.cc03_reply_due,
                   t3.cc03_delivered_on,
                   t3.FF_CONCURRENCYCONTROL,
                   t3.cc03_create_on,
                   t3.cc03_date_printed,
                   t3.cc03_received_on,
                   t3.cc03_print_officer,
                   t3.cc03_print_count,
                   t3.cc03_print_office,
                   getcodedesc('EN', t3.cstd_status, 'STATUS') AS innerStd1_desc,
                   getcodedesc('EN', t1.cstd_letter_type, 'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
         inner join tc03_letter t3  on t1.cc01_id = t3.cc01_id
         inner join taxpayer  on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#) 
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#) 
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#) 
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (t3.cr01_internal_id = nvl(#internal_id:String#, t3.cr01_internal_id)) 
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#) 
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%'))) 
        and (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
		and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
		and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#)
        and (#paraSessionOfficeID:String# = t3.cc03_print_office or  
           (#paraSessionSecurityLevel:String# &gt;= taxpayer.security_level and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID))
)TC03_LETTER where ROWNUM &lt;= #recordEnd:Integer#
)tc03
where ROW_SEQ &gt;=#recordStart:Integer#)</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDByTin" cascade="false" web-service="true" isSortedEntry="true">select /*+ FIRST_ROWS */ CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc,
               ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ  
from (
        SELECT  t3.cc03_id,
                   t3.ca09_tax_type_code,
                   t3.cc01_id,
                   t1.cstd_letter_type cstd_letter_type,
                   t3.cc03_case_reference,
                   t3.cc03_filing_period,
                   t3.cc03_payment_period,
                   t3.cc03_reply_incoming_num,
                   t3.cc03_reply_taxpayer_ref,
                   t3.cc03_sent_on,
                   t3.cc03_year,
                   cr01_internal_id,
                   taxpayer.TIN,
                   t3.cr03_branch_code,
                   t3.cs10_id,
                   t3.cstd_correspondence,
                   t3.cstd_status,
                   t3.cc03_entity_udk,
                   t3.cc03_reply_due,
                   t3.cc03_delivered_on,
                   t3.FF_CONCURRENCYCONTROL,
                   t3.cc03_create_on,
                   t3.cc03_date_printed,
                   t3.cc03_received_on,
                   t3.cc03_print_officer,
                   t3.cc03_print_count,
                   t3.cc03_print_office,
                   getcodedesc('EN', t3.cstd_status, 'STATUS') AS innerStd1_desc,
                   getcodedesc('EN', t1.cstd_letter_type, 'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
         inner join tc03_letter t3  on t1.cc01_id = t3.cc01_id
         inner join taxpayer  on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (t3.cr01_internal_id = #internal_id:String#)
        and (#paraSessionOfficeID:String# = t3.cc03_print_office or  
           (#paraSessionSecurityLevel:String# &gt;= taxpayer.security_level and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID))
) )
where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer# )</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDByTinAndType" cascade="false" web-service="true" isSortedEntry="true">select  /*+ index(t3,IDX_TC03_CR01_ID_CR03_BRANCH) */ CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc,
               ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ  
from (
        SELECT  t3.cc03_id,
                   t3.ca09_tax_type_code,
                   t3.cc01_id,
                   t1.cstd_letter_type cstd_letter_type,
                   t3.cc03_case_reference,
                   t3.cc03_filing_period,
                   t3.cc03_payment_period,
                   t3.cc03_reply_incoming_num,
                   t3.cc03_reply_taxpayer_ref,
                   t3.cc03_sent_on,
                   t3.cc03_year,
                   cr01_internal_id,
                   taxpayer.TIN,
                   t3.cr03_branch_code,
                   t3.cs10_id,
                   t3.cstd_correspondence,
                   t3.cstd_status,
                   t3.cc03_entity_udk,
                   t3.cc03_reply_due,
                   t3.cc03_delivered_on,
                   t3.FF_CONCURRENCYCONTROL,
                   t3.cc03_create_on,
                   t3.cc03_date_printed,
                   t3.cc03_received_on,
                   t3.cc03_print_officer,
                   t3.cc03_print_count,
                   t3.cc03_print_office,
                   getcodedesc('EN', t3.cstd_status, 'STATUS') AS innerStd1_desc,
                   getcodedesc('EN', t1.cstd_letter_type, 'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
         inner join tc03_letter t3  on t1.cc01_id = t3.cc01_id
         inner join taxpayer  on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (t3.cr01_internal_id = #internal_id:String#)
        and (t1.cstd_letter_type = #letter_type:String#)
        and (#paraSessionOfficeID:String# = t3.cc03_print_office or  
           (#paraSessionSecurityLevel:String# &gt;= taxpayer.security_level and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID))
) )
where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer# )</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDByTinAndTypeSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select  /*+ index(t3,IDX_TC03_CR01_ID_CR03_BRANCH) */ CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc,
               ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ  
from (
        SELECT  t3.cc03_id,
                   t3.ca09_tax_type_code,
                   t3.cc01_id,
                   t1.cstd_letter_type cstd_letter_type,
                   t3.cc03_case_reference,
                   t3.cc03_filing_period,
                   t3.cc03_payment_period,
                   t3.cc03_reply_incoming_num,
                   t3.cc03_reply_taxpayer_ref,
                   t3.cc03_sent_on,
                   t3.cc03_year,
                   cr01_internal_id,
                   taxpayer.TIN,
                   t3.cr03_branch_code,
                   t3.cs10_id,
                   t3.cstd_correspondence,
                   t3.cstd_status,
                   t3.cc03_entity_udk,
                   t3.cc03_reply_due,
                   t3.cc03_delivered_on,
                   t3.FF_CONCURRENCYCONTROL,
                   t3.cc03_create_on,
                   t3.cc03_date_printed,
                   t3.cc03_received_on,
                   t3.cc03_print_officer,
                   t3.cc03_print_count,
                   t3.cc03_print_office,
                   getcodedesc('EN', t3.cstd_status, 'STATUS') AS innerStd1_desc,
                   getcodedesc('EN', t1.cstd_letter_type, 'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
         inner join tc03_letter t3  on t1.cc01_id = t3.cc01_id
         inner join taxpayer  on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (t3.cr01_internal_id = #internal_id:String#)
        and (t1.cstd_letter_type = #letter_type:String#)
        and (#paraSessionOfficeID:String# = t3.cc03_print_office or  
           (#paraSessionSecurityLevel:String# &gt;= taxpayer.security_level and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID))
) )
where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer# ) order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDByTinSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select /*+ FIRST_ROWS */ CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc,
               ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ  
from (
        SELECT  t3.cc03_id,
                   t3.ca09_tax_type_code,
                   t3.cc01_id,
                   t1.cstd_letter_type cstd_letter_type,
                   t3.cc03_case_reference,
                   t3.cc03_filing_period,
                   t3.cc03_payment_period,
                   t3.cc03_reply_incoming_num,
                   t3.cc03_reply_taxpayer_ref,
                   t3.cc03_sent_on,
                   t3.cc03_year,
                   cr01_internal_id,
                   taxpayer.TIN,
                   t3.cr03_branch_code,
                   t3.cs10_id,
                   t3.cstd_correspondence,
                   t3.cstd_status,
                   t3.cc03_entity_udk,
                   t3.cc03_reply_due,
                   t3.cc03_delivered_on,
                   t3.FF_CONCURRENCYCONTROL,
                   t3.cc03_create_on,
                   t3.cc03_date_printed,
                   t3.cc03_received_on,
                   t3.cc03_print_officer,
                   t3.cc03_print_count,
                   t3.cc03_print_office,
                   getcodedesc('EN', t3.cstd_status, 'STATUS') AS innerStd1_desc,
                   getcodedesc('EN', t1.cstd_letter_type, 'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
         inner join tc03_letter t3  on t1.cc01_id = t3.cc01_id
         inner join taxpayer  on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (t3.cr01_internal_id = #internal_id:String#)
        and (#paraSessionOfficeID:String# = t3.cc03_print_office or  
           (#paraSessionSecurityLevel:String# &gt;= taxpayer.security_level and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID))
) )
where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer# ) order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDByType" cascade="false" web-service="true" isSortedEntry="true">select /*+ FIRST_ROWS */ CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc,
               ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ  
from (
        SELECT  t3.cc03_id,
                   t3.ca09_tax_type_code,
                   t3.cc01_id,
                   t1.cstd_letter_type cstd_letter_type,
                   t3.cc03_case_reference,
                   t3.cc03_filing_period,
                   t3.cc03_payment_period,
                   t3.cc03_reply_incoming_num,
                   t3.cc03_reply_taxpayer_ref,
                   t3.cc03_sent_on,
                   t3.cc03_year,
                   cr01_internal_id,
                   taxpayer.TIN,
                   t3.cr03_branch_code,
                   t3.cs10_id,
                   t3.cstd_correspondence,
                   t3.cstd_status,
                   t3.cc03_entity_udk,
                   t3.cc03_reply_due,
                   t3.cc03_delivered_on,
                   t3.FF_CONCURRENCYCONTROL,
                   t3.cc03_create_on,
                   t3.cc03_date_printed,
                   t3.cc03_received_on,
                   t3.cc03_print_officer,
                   t3.cc03_print_count,
                   t3.cc03_print_office,
                   getcodedesc('EN', t3.cstd_status, 'STATUS') AS innerStd1_desc,
                   getcodedesc('EN', t1.cstd_letter_type, 'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
         inner join tc03_letter t3  on t1.cc01_id = t3.cc01_id
         inner join taxpayer  on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (t1.cstd_letter_type = #letter_type:String#)
        and (#paraSessionOfficeID:String# = t3.cc03_print_office or  
           (#paraSessionSecurityLevel:String# &gt;= taxpayer.security_level and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID))
) )
where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer# )</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDByTypeSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select /*+ FIRST_ROWS */ CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc,
               ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ  
from (
        SELECT  t3.cc03_id,
                   t3.ca09_tax_type_code,
                   t3.cc01_id,
                   t1.cstd_letter_type cstd_letter_type,
                   t3.cc03_case_reference,
                   t3.cc03_filing_period,
                   t3.cc03_payment_period,
                   t3.cc03_reply_incoming_num,
                   t3.cc03_reply_taxpayer_ref,
                   t3.cc03_sent_on,
                   t3.cc03_year,
                   cr01_internal_id,
                   taxpayer.TIN,
                   t3.cr03_branch_code,
                   t3.cs10_id,
                   t3.cstd_correspondence,
                   t3.cstd_status,
                   t3.cc03_entity_udk,
                   t3.cc03_reply_due,
                   t3.cc03_delivered_on,
                   t3.FF_CONCURRENCYCONTROL,
                   t3.cc03_create_on,
                   t3.cc03_date_printed,
                   t3.cc03_received_on,
                   t3.cc03_print_officer,
                   t3.cc03_print_count,
                   t3.cc03_print_office,
                   getcodedesc('EN', t3.cstd_status, 'STATUS') AS innerStd1_desc,
                   getcodedesc('EN', t1.cstd_letter_type, 'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
         inner join tc03_letter t3  on t1.cc01_id = t3.cc01_id
         inner join taxpayer  on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (t1.cstd_letter_type = #letter_type:String#)
        and (#paraSessionOfficeID:String# = t3.cc03_print_office or  
           (#paraSessionSecurityLevel:String# &gt;= taxpayer.security_level and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID))
) )
where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer# ) order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDHasLetterId" cascade="false" web-service="true" isSortedEntry="true">select  /*+ FIRST_ROWS */  CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc     
  from ( select   CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc     
  from ( 
  select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc, 
	   ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ       
  from ( 
	   select distinct CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc       
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cstd_status,
			   t3.cc03_entity_udk, 
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
			   t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#letterId:String# is null or t3.cc03_id = #letterId:String#)     
	   
union all     

SELECT t3.cc03_id,
    t3.ca09_tax_type_code,
    t3.cc01_id,
    t1.cstd_letter_type cstd_letter_type,
    t3.cc03_case_reference,
    t3.cc03_filing_period,
    t3.cc03_payment_period,
    t3.cc03_reply_incoming_num,
    t3.cc03_reply_taxpayer_ref,
    t3.cc03_sent_on,
    t3.cc03_year,
    cr01_internal_id,
    taxpayer.TIN ,
    t3.cr03_branch_code,
    t3.cs10_id,
    t3.cstd_correspondence,
    t3.cstd_status,
	t3.cc03_entity_udk, 
    t3.cc03_reply_due,
    t3.cc03_delivered_on,
    t3.FF_CONCURRENCYCONTROL,
    t3.cc03_create_on,
    t3.cc03_date_printed,
    t3.cc03_received_on,
    t3.cc03_print_officer,
    t3.cc03_print_count,
    t3.cc03_print_office, 
	getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
	getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc  	
  FROM tc01_letter_template t1,tc03_letter t3, taxpayer  
   WHERE ((t3.cc03_print_office &lt;&gt; taxpayer.office_id and
       taxpayer.internal_id = cr01_internal_id) OR
       (#paraSessionOfficeID:String# = taxpayer.office_id and taxpayer.internal_id = cr01_internal_id))
   AND #paraSessionSecurityLevel:String# &gt;= taxpayer.security_level
   AND t1.cc01_id = t3.cc01_id and  
    (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#)
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#)
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#)
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (#internal_id:String# is null or t3.cr01_internal_id = #internal_id:String#)
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#) 
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%')))  
        and (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
			and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
				and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#) and
 #paraSessionOfficeID:String# = taxpayer.OFFICE_ID 
 )  TC03_LETTER  ) )
 where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer#  )</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDHasLetterIdSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select  /*+ FIRST_ROWS */  CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc     
  from ( select   CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc     
  from ( 
  select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc, 
	   ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ       
  from ( 
	   select distinct CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc       
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cstd_status,
			   t3.cc03_entity_udk, 
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
			   t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#letterId:String# is null or t3.cc03_id = #letterId:String#)     
	   
union all     

SELECT t3.cc03_id,
    t3.ca09_tax_type_code,
    t3.cc01_id,
    t1.cstd_letter_type cstd_letter_type,
    t3.cc03_case_reference,
    t3.cc03_filing_period,
    t3.cc03_payment_period,
    t3.cc03_reply_incoming_num,
    t3.cc03_reply_taxpayer_ref,
    t3.cc03_sent_on,
    t3.cc03_year,
    cr01_internal_id,
    taxpayer.TIN ,
    t3.cr03_branch_code,
    t3.cs10_id,
    t3.cstd_correspondence,
    t3.cstd_status,
	t3.cc03_entity_udk, 
    t3.cc03_reply_due,
    t3.cc03_delivered_on,
    t3.FF_CONCURRENCYCONTROL,
    t3.cc03_create_on,
    t3.cc03_date_printed,
    t3.cc03_received_on,
    t3.cc03_print_officer,
    t3.cc03_print_count,
    t3.cc03_print_office, 
	getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
	getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc  	
  FROM tc01_letter_template t1,tc03_letter t3, taxpayer  
   WHERE ((t3.cc03_print_office &lt;&gt; taxpayer.office_id and
       taxpayer.internal_id = cr01_internal_id) OR
       (#paraSessionOfficeID:String# = taxpayer.office_id and taxpayer.internal_id = cr01_internal_id))
   AND #paraSessionSecurityLevel:String# &gt;= taxpayer.security_level
   AND t1.cc01_id = t3.cc01_id and  
    (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#)
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#)
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#)
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (#internal_id:String# is null or t3.cr01_internal_id = #internal_id:String#)
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#) 
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%')))  
        and (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
			and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
				and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#) and
 #paraSessionOfficeID:String# = taxpayer.OFFICE_ID 
 )  TC03_LETTER  ) )
 where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer#  ) order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSAndSTDSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select /*+ index(t3,IDX_TC03_CR01_ID_CR03_BRANCH) */  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc
from (
select  CC03_ID,
               CA09_TAX_TYPE_CODE,
               CC01_ID,
               CSTD_LETTER_TYPE,
               CC03_CASE_REFERENCE,
               CC03_FILING_PERIOD,
               CC03_PAYMENT_PERIOD,
               CC03_REPLY_INCOMING_NUM,
               CC03_REPLY_TAXPAYER_REF,
               CC03_SENT_ON,
               CC03_YEAR,
               CR01_INTERNAL_ID,
               TIN,
               CR03_BRANCH_CODE,
               CS10_ID,
               CSTD_CORRESPONDENCE,
               CSTD_STATUS,
               CC03_ENTITY_UDK,
               CC03_REPLY_DUE,
               CC03_DELIVERED_ON,
               FF_CONCURRENCYCONTROL,
               cc03_create_on,
               cc03_date_printed,
               cc03_received_on,
               cc03_print_officer,
               cc03_print_count,
               cc03_print_office,
               innerStd1_desc,
               innerStd2_desc,
               ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ  
from (
        SELECT  t3.cc03_id,
                   t3.ca09_tax_type_code,
                   t3.cc01_id,
                   t1.cstd_letter_type cstd_letter_type,
                   t3.cc03_case_reference,
                   t3.cc03_filing_period,
                   t3.cc03_payment_period,
                   t3.cc03_reply_incoming_num,
                   t3.cc03_reply_taxpayer_ref,
                   t3.cc03_sent_on,
                   t3.cc03_year,
                   cr01_internal_id,
                   taxpayer.TIN,
                   t3.cr03_branch_code,
                   t3.cs10_id,
                   t3.cstd_correspondence,
                   t3.cstd_status,
                   t3.cc03_entity_udk,
                   t3.cc03_reply_due,
                   t3.cc03_delivered_on,
                   t3.FF_CONCURRENCYCONTROL,
                   t3.cc03_create_on,
                   t3.cc03_date_printed,
                   t3.cc03_received_on,
                   t3.cc03_print_officer,
                   t3.cc03_print_count,
                   t3.cc03_print_office,
                   getcodedesc('EN', t3.cstd_status, 'STATUS') AS innerStd1_desc,
                   getcodedesc('EN', t1.cstd_letter_type, 'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
         inner join tc03_letter t3  on t1.cc01_id = t3.cc01_id
         inner join taxpayer  on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#) 
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#) 
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#) 
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (t3.cr01_internal_id = nvl(#internal_id:String#, t3.cr01_internal_id)) 
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#) 
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%'))) 
        and (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
		and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
		and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#)
        and (#paraSessionOfficeID:String# = t3.cc03_print_office or  
           (#paraSessionSecurityLevel:String# &gt;= taxpayer.security_level and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID))
)TC03_LETTER where ROWNUM &lt;= #recordEnd:Integer#
)tc03
where ROW_SEQ &gt;=#recordStart:Integer#) order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSHasLetterId" cascade="false" web-service="true" isSortedEntry="true">select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
	   innerStd2_desc   
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cstd_status, 
			   t3.cc03_entity_udk, 
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
	           t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc   
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#letterId:String# is null or t3.cc03_id = #letterId:String#)
       )</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSHasLetterIdSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
	   innerStd2_desc   
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cstd_status, 
			   t3.cc03_entity_udk, 
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
	           t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc   
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#letterId:String# is null or t3.cc03_id = #letterId:String#)
       ) order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchLettersForTPSSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select  /*+ FIRST_ROWS */  CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc     
 FROM ( 
 select  CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc     
 FROM ( 
select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TC03_LETTER.TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
	   CC03_ENTITY_UDK, 
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc,  
	   ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ        
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cstd_status,
			   t3.cc03_entity_udk, 
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
	           t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#)
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#)
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#)
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (#internal_id:String# is null or t3.cr01_internal_id = #internal_id:String#)
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#) 
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%'))) 
        and (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
		and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
		and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#)
		and #paraSessionOfficeID:String# = t3.cc03_print_office
       ) TC03_LETTER  ) 
	   where ROW_SEQ BETWEEN #recordStart:Integer# AND #recordEnd:Integer# ) order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchLettersPagination" cascade="false" web-service="true" isSortedEntry="true">select  CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TC03.TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
       CC03_ENTITY_UDK,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc 
   FROM (
	select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
       CC03_ENTITY_UDK,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc,
     ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
			   t3.cstd_status,
			   t3.cc03_entity_udk,
			   t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#)
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#)
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#)
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (t3.cr01_internal_id = nvl(#internal_id:String#, t3.cr01_internal_id)) 
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#)
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%'))) 
        and  (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
        and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
		and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#)
		)TC03_LETTER where ROWNUM &lt;= #recordEnd:Integer#
    )tc03
		 where  ROW_SEQ &gt;=#recordStart:Integer#</raw-find-entry>
    <raw-find-entry name="searchLettersPaginationSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select  CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TC03.TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
       CC03_ENTITY_UDK,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc 
   FROM (
	select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
       CC03_ENTITY_UDK,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc,
     ROW_NUMBER() OVER($specialForOrderBy$ $sortingOptions$) AS ROW_SEQ
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
			   t3.cstd_status,
			   t3.cc03_entity_udk,
			   t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#)
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#)
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#)
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (t3.cr01_internal_id = nvl(#internal_id:String#, t3.cr01_internal_id)) 
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#)
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%'))) 
        and  (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
        and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
		and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#)
		)TC03_LETTER where ROWNUM &lt;= #recordEnd:Integer#
    )tc03
		 where  ROW_SEQ &gt;=#recordStart:Integer# order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchLettersSortedEntry" cascade="false" web-service="true" isSystemEntry="true">select CC03_ID,
       CA09_TAX_TYPE_CODE,
       CC01_ID,
       CSTD_LETTER_TYPE,
       CC03_CASE_REFERENCE,
       CC03_FILING_PERIOD,
       CC03_PAYMENT_PERIOD,
       CC03_REPLY_INCOMING_NUM,
       CC03_REPLY_TAXPAYER_REF,
       CC03_SENT_ON,
       CC03_YEAR,
       CR01_INTERNAL_ID,
       TC03_LETTER.TIN,
       CR03_BRANCH_CODE,
       CS10_ID,
       CSTD_CORRESPONDENCE,
       CSTD_STATUS,
       CC03_REPLY_DUE,
       CC03_DELIVERED_ON,
       CC03_ENTITY_UDK,
	   FF_CONCURRENCYCONTROL,
	   cc03_create_on,
	   cc03_date_printed,
	   cc03_received_on,
	   cc03_print_officer,
	   cc03_print_count,
	   cc03_print_office, 
	   innerStd1_desc,
       innerStd2_desc 
   FROM (
              SELECT t3.cc03_id,
               t3.ca09_tax_type_code,
               t3.cc01_id,
               t1.cstd_letter_type        cstd_letter_type,
               t3.cc03_case_reference,
               t3.cc03_filing_period,
               t3.cc03_payment_period,
               t3.cc03_reply_incoming_num,
               t3.cc03_reply_taxpayer_ref,
               t3.cc03_sent_on,
               t3.cc03_year,
               cr01_internal_id,
               taxpayer.TIN ,
               t3.cr03_branch_code,
               t3.cs10_id,
               t3.cstd_correspondence,
               t3.cc03_reply_due,
               t3.cc03_delivered_on,
			   t3.FF_CONCURRENCYCONTROL,
			   t3.cc03_create_on,
			   t3.cc03_date_printed,
			   t3.cc03_received_on,
			   t3.cc03_print_officer,
			   t3.cc03_print_count,
			   t3.cstd_status,
			   t3.cc03_entity_udk,
			   t3.cc03_print_office, 
			   getcodedesc('EN',t3.cstd_status,'STATUS')           AS innerStd1_desc,
			   getcodedesc('EN',t1.cstd_letter_type,'ENTITY_TYPE') AS innerStd2_desc 
          FROM tc01_letter_template t1
          inner join tc03_letter t3
            on t1.cc01_id = t3.cc01_id
         inner join taxpayer
            on t3.cr01_internal_id = taxpayer.INTERNAL_ID
         WHERE (#need_reply:String# is null or t1.cc01_need_reply = #need_reply:String#)
        and (#letter_status:String# is null or t3.cstd_status = #letter_status:String#)
        and (#sent_fromdate:Date# is null or t3.cc03_sent_on &gt; #sent_fromdate:Date#)
        and (#sent_todate:Date# is null or t3.cc03_sent_on &lt; #sent_todate:Date#)
        and (#internal_id:String# is null or t3.cr01_internal_id = #internal_id:String#)
        and (#branch_code:String# is null or t3.cr03_branch_code = #branch_code:String#)
        and (#tax_type:String# is null or t3.ca09_tax_type_code = #tax_type:String#)
		and (#fin:String# is null or (#finIsAdvanceSearch:String# is null and 
t3.cr07_fin = #fin:String#) or (#finIsAdvanceSearch:String# is not 
null and t3.cr07_fin like ('%' || #fin:String# || '%'))) 
        and (#letter_type:String# is null or t1.cstd_letter_type = #letter_type:String#)
        and (#letterId:String# is null or t3.cc03_id = #letterId:String#)
		and (#Created_after:Date# is null or t3.cc03_create_on &gt; #Created_after:Date#)
        and (#Created_before:Date# is null or t3.cc03_create_on &lt; #Created_before:Date#)
		and (#Created_by:String# is null or t3.cs10_id = #Created_by:String#)
		and (#Printing_Officer:String# is null or (t3.cc03_print_officer = #Printing_Officer:String# and t3.cstd_status = 'LTR_PPRT'))
        and (#Reply_due:Date# is null or (t3.cstd_status = 'LTR_PRPL' and t3.cc03_reply_due &gt;= sysdate and t3.cc03_reply_due &lt;= #Reply_due:Date#))
		and (#My_print_jobs:String# is null or (t3.cc03_print_officer = #current_user:String#  and t3.cstd_status = 'LTR_PPRT'))
        and (#taxYear:Integer# is null or t3.cc03_year = #taxYear:Integer#)
		and (#filingPeriod:Integer# is null or t3.cc03_filing_period = #filingPeriod:Integer#)
		and #paraSessionOfficeID:String# = taxpayer.OFFICE_ID 
         ) TC03_LETTER 
		 where 1=1 order by $sortingOptions$</raw-find-entry>
    <raw-find-entry name="searchOaCaseByRequestNo" cascade="false" web-service="true">SELECT Co01_Request_No  AS Co01_Request_No,
  Cstd_Request_Type     AS Cstd_Request_Type,
  Cstd_Request_Ref_Type AS Cstd_Request_Ref_Type,
  Cstd_Tax_Type         AS Ca09_Tax_Type_Code,
  CSTD_WRGTIN_OUTCOME   AS CSTD_WRGTIN_OUTCOME
From (
Select R.Co01_Request_No, R.Cstd_Request_Type, R.Cstd_Request_Ref_Type, R.Cstd_Tax_Type, D.CSTD_WRGTIN_OUTCOME
From To01_Requests R 
LEFT JOIN To07_Request_Ruling D
ON R.Co01_Request_No    = D.Co01_Request_No
WHERE R.Co01_Request_No =#requestNo:String#
ORDER BY D.CO07_RULING_SEQ_NO DESC
)</raw-find-entry>
    <raw-find-entry name="searchOaCasesRelatedToReturn" cascade="false" web-service="true">SELECT co01_request_no AS co01_request_no ,
  ct01_transaction_id  AS ct01_transaction_id ,
  ''                   AS cc03_id
FROM
  (SELECT to01.co01_request_no,
    to02.ct01_transaction_id
  FROM to01_requests to01,
    to02_request_details to02
  WHERE to01.co01_request_no= to02.co01_request_no
  AND to01.cr01_internal_id= #internalId:String# 
  AND to01.cr03_branch_code= #branchId:String# 
  AND to01.cstd_tax_type IN ($taxTypes$)
  AND to01.cstd_request_status NOT IN ('OBJ_RMVD', 'OBJ_RJCT', 'OBJ_CLSD', 'OBJ_CPLT')
  )</raw-find-entry>
    <raw-find-entry name="searchPreviousReturnAN" cascade="false" web-service="true">select tc03.cc03_id cc03_id, tc03.cc03_print_office
		   from tc03_letter tc03,tc01_letter_template tc01
		   where tc03.cc01_id = tc01.cc01_id 
		   and   tc01.cstd_letter_type  = #letterType:String#
		   and   tc03.cc03_entity_id = #entityId:String#
		   and   tc03.cstd_entity = 'RET'</raw-find-entry>
    <raw-find-entry name="searchRelatedTranByOaCase" cascade="false" web-service="true">SELECT D.Ct01_Transaction_Id AS ct01_transaction_id,
  R.CSTD_REQUEST_TYPE        AS CSTD_REQUEST_TYPE,
  R.CSTD_REQUEST_REF_TYPE    AS CSTD_REQUEST_REF_TYPE,
  R.CSTD_WRGTIN_OUTCOME AS CSTD_WRGTIN_OUTCOME,  
  R.cstd_case_nature AS cstd_case_nature    
FROM To02_Request_Details D
INNER JOIN
  (SELECT to01.CO01_REQUEST_NO,
    CSTD_REQUEST_TYPE,
    CSTD_REQUEST_REF_TYPE,
    CSTD_WRGTIN_OUTCOME,   
    to01.cstd_case_nature   
  FROM To01_Requests to01 LEFT JOIN To07_Request_Ruling to07 
  ON to01.CO01_REQUEST_NO = to07.CO01_REQUEST_NO 
  WHERE to01.Cstd_Request_Type IN ($requestType$)
  AND to01.CO01_REQUEST_NO      =#requestNo:String#
  )R
ON D.CO01_REQUEST_NO = R.CO01_REQUEST_NO</raw-find-entry>
    <raw-find-entry name="searchRelatedTranByRequestNo" cascade="false" web-service="true">SELECT D.Ct01_Transaction_Id AS ct01_transaction_id,
  R.CSTD_REQUEST_TYPE        AS CSTD_REQUEST_TYPE,
  R.CSTD_REQUEST_REF_TYPE    AS CSTD_REQUEST_REF_TYPE,
  R.CSTD_WRGTIN_OUTCOME AS CSTD_WRGTIN_OUTCOME 
FROM To02_Request_Details D
INNER JOIN
  (SELECT to01.CO01_REQUEST_NO,
    CSTD_REQUEST_TYPE,
    CSTD_REQUEST_REF_TYPE,
    CSTD_WRGTIN_OUTCOME 
  FROM To01_Requests to01 LEFT JOIN To07_Request_Ruling to07 
  ON to01.CO01_REQUEST_NO = to07.CO01_REQUEST_NO 
  WHERE to01.CO01_REQUEST_NO  =#requestNo:String#
  )R
ON D.CO01_REQUEST_NO = R.CO01_REQUEST_NO</raw-find-entry>
    <raw-find-entry name="searchRelatedTransaction" cascade="false" web-service="true">select ct01_transaction_id, '' as cc03_id
	from (
	SELECT tt01.ct01_transaction_id as ct01_transaction_id
	FROM TT01_TRANSACTIONS tt01, tax_returns ta02
	WHERE tt01.CT01_REVERSED_FLAG = 'N'
	and tt01.cr01_internal_id = ta02.cr01_internal_id
	and tt01.cr03_branch_code = ta02.cr03_branch_code
	and tt01.cstd_tax_type IN ($taxTypes$)
	and tt01.ct01_tax_year = ta02.ca02_tax_year
	and tt01.ct01_period = ta02.ca02_tax_period
	and ta02.ca02_return_id = #returnId:String# 
	and ta02.ca02_return_version = #returnVersion:String# 
	and tt01.ct01_transaction_id = #transactionId:String#  

	union all
				  
	SELECT tt01.ct01_transaction_id as ct01_transaction_id
	FROM TT01_TRANSACTIONS tt01
	WHERE tt01.CT01_REVERSED_FLAG = 'N'
	and tt01.cstd_allocated_entity = 'RET'
	and tt01.ct01_allocated_entityid = #returnId:String# 
    and tt01.ct01_transaction_id = #transactionId:String#  	
	)</raw-find-entry>
    <sub-data-model name="attachment" relation="one-to-many" data-model-name="TC05_LETTER_ATTACHMENT" readonly="true">
      <equal prepend="AND" from-property="cc03_id" to-property="identifier" />
      <additionalCondition>entity_code = 'LTR'</additionalCondition>
    </sub-data-model>
    <filter-formula name="filter-formula">
      <business>(((taxpayer.office_id IN SESSION(USER_ACCESSIBLE_TAX_OFFICES) OR taxpayer.office_id &lt;&gt; cc03_print_office) AND SESSION(USER_SECURITY_LEVEL) &gt;= Taxpayer(cr01_internal_id).security_level) or (SESSION(OFFICE_ID) &lt;&gt; Taxpayer(cr01_internal_id).office_id  AND SESSION(USER_SECURITY_LEVEL) &gt;= Taxpayer(cr01_internal_id).security_level and cstd_letter_type in('LTR_RP12', 'LTR_RP14', 'LTR_RP15', 'LTR_RP16', 'LTR_RP17', 'LTR_RP18', 'LTR_RP19', 'LTR_RP20', 'LTR_OA01', 'LTR_OA02', 'LTR_OA12', 'LTR_AD04','LTR_AC03','LTR_AC05','LTR_EF23','LTR_EF24','LTR_EF25','LTR_EF26','LTR_EF27')))</business>
      <business-expression>flexrule:String seOffice := SESSION("OFFICE_ID");
					AssertNotEmpty(seOffice, "need session:" + "USER_TAX_OFFICE");
					Log("debug","get session USER_TAX_OFFICE value: " + seOffice);
					
					
					String seSecLel := SESSION("USER_SECURITY_LEVEL");
					AssertNotEmpty(seSecLel, "need session:" + "USER_SECURITY_LEVEL");
					Log("debug","get session USER_SECURITY_LEVEL value: " + seSecLel);

					String fsql := "'" + seOffice + "' = filter1 and " + "'" + seSecLel + "' &gt;= filter2";
					Log("debug","get the final filterout sql: " + fsql);
					return fsql;</business-expression>
    </filter-formula>
  </data-model>
  <data-model readonly="false" name="TC04_LETTER_CONTENT" tag-name="TC04_LETTER_CONTENT" table="TC04_LETTER_CONTENT" order="" web-service="true" accept-null="false">
    <property name="cc04_id" type="Integer" column-type="NUMERIC" column="CC04_ID" title="CC04_ID" default-value="" tag-name="cc04_id" iskey="true" isSequence="true" find-by="true" order-by="" web-service="true" />
    <property name="cc03_id" type="Long" column-type="NUMERIC" readonly="false" column="CC03_ID" title="CC03_ID" default-value="" tag-name="cc03_id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="cc04_is_pdf" type="String" column-type="VARCHAR" readonly="false" column="CC04_IS_PDF" title="CC04_IS_PDF" default-value="" tag-name="cc04_is_pdf" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" isAudit="false" />
    <property name="cc04_letter_pdf_content" type="byte[]" column-type="BLOB" readonly="false" column="CC04_LETTER_PDF_CONTENT" title="CC04_LETTER_PDF_CONTENT" default-value="" tag-name="cc04_letter_pdf_content" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
  </data-model>
  <data-model readonly="true" name="TC05_LETTER_ATTACHMENT" tag-name="attachment" table="ATTACHMENT" order="" web-service="false" accept-null="false" isEntity="false">
    <property name="barcode" type="String" column-type="VARCHAR" column="BARCODE" title="BARCODE" default-value="" tag-name="number" iskey="true" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="doc_desc" type="String" column-type="VARCHAR" readonly="false" column="DOC_DESC" title="DOC_DESC" default-value="" tag-name="description" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="doc_desc" web-service="true" />
    <property name="doc_pages" column="DOC_PAGES" type="String" tag-name="pages" DB-column-type="VARCHAR2" readonly="false" DB-isWritable="true" DB-isAutoIncrement="false" column-type="VARCHAR" nullable="false" length="40" title="DOC_PAGES" />
    <property name="doc_type" type="String" column-type="VARCHAR" readonly="false" column="DOC_TYPE" title="DOC_TYPE" default-value="" tag-name="typecode" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="doc_type" web-service="true" />
    <property name="entity_code" type="String" column-type="VARCHAR" readonly="false" column="ENTITY_CODE" title="ENTITY_CODE" default-value="" tag-name="entity_code" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="entity_code" web-service="true" />
    <property name="entity_type" type="String" column-type="VARCHAR" readonly="false" column="ENTITY_TYPE" title="ENTITY_TYPE" default-value="" tag-name="entity_type" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="entity_type" web-service="true" />
    <property name="id" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="id" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="identifier" type="String" column-type="VARCHAR" readonly="false" column="IDENTIFIER" title="IDENTIFIER" default-value="" tag-name="identifier" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="identifier" web-service="true" />
    <property name="is_mandatory" type="String" column-type="CHAR" readonly="false" column="IS_MANDATORY" title="IS_MANDATORY" default-value="" tag-name="isMandatory" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="is_mandatory" web-service="true" isAudit="false" />
    <property name="module_name" type="String" column-type="VARCHAR" readonly="false" column="MODULE_NAME" title="MODULE_NAME" default-value="" tag-name="module_name" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="module_name" web-service="true" />
    <property name="rejectionreason" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="rejectionreason" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="scanned" type="String" column-type="VARCHAR" readonly="false" column="SCANNED" title="SCANNED" default-value="" tag-name="scanned" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="scanned" web-service="true" />
    <property name="rejectreasondetails" type="String" column-type="VARCHAR" readonly="false" column="" title="" default-value="" tag-name="rejectreasondetails" iskey="false" isUserDefKey="false" isSequence="false" accept-null="true" find-by="true" order-by="" web-service="true" />
    <property name="status" type="String" column-type="VARCHAR" readonly="true" column="" title="" default-value="" tag-name="status" iskey="false" isUserDefKey="false" isSequence="false" find-by="true" order-by="" web-service="true" />
    <property name="statusdate" type="String" column-type="VARCHAR" readonly="false" column="" title="" default-value="" tag-name="statusdate" iskey="false" isUserDefKey="false" isSequence="false" accept-null="true" find-by="true" order-by="" web-service="true" />
  </data-model>
  <data-model name="TC05_LETTER_OACASE" tag-name="TC05_LETTER_OACASE" table="TC05_LETTER_OACASE" readonly="false">
    <property name="cc03_id" column="CC03_ID" type="Long" tag-name="cc03_id" DB-column-type="NUMBER" DB-isWritable="true" DB-isAutoIncrement="false" column-type="NUMERIC" nullable="false" length="22" title="CC03_ID" iskey="true" default-value="" isSequence="false" find-by="true" order-by="cc03_id" web-service="true" />
    <property name="co01_request_no" column="CO01_REQUEST_NO" type="String" tag-name="co01_request_no" DB-column-type="VARCHAR2" DB-isWritable="true" DB-isAutoIncrement="false" column-type="VARCHAR" nullable="false" length="10" title="CO01_REQUEST_NO" iskey="false" default-value="" isSequence="false" find-by="true" order-by="co01_request_no" web-service="true" readonly="false" isUserDefKey="false" />
  </data-model>
  <com.bull.framework.dmd.dm.DatabaseProperty>
    <databaseUrl>bull.ds.e-ris.stl</databaseUrl>
    <name>e-ris.stl.ds</name>
    <type>JNDI</type>
    <txType>JDBC</txType>
  </com.bull.framework.dmd.dm.DatabaseProperty>
</data-models>